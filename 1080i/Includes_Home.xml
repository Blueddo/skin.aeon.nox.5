<?xml version="1.0" encoding="UTF-8"?>
<includes>
  <!-- Horizontal Homemenu -->
  <include name="Home_HorizontalMenu">
    <control type="group">
      <posy>424</posy>
      <control type="group">
        <animation effect="slide" end="0,338" time="320" tween="cubic" easing="inout" condition="!Skin.HasSetting(middlemainmenu)">Conditional</animation>
        <animation effect="slide" end="-1945,0" time="240">WindowClose</animation>
        <animation effect="slide" end="-1945,0" time="240" condition="$EXP[Widgets_HaveFocus] + !Skin.HasSetting(middlemainmenu) + !Skin.HasSetting(Widget.List) + $EXP[Widget_InfoPanelEnabled]">Conditional</animation>
        <animation effect="slide" start="-1945,0" end="0,0" delay="300" time="240" condition="!Window.Previous(startup)">WindowOpen</animation>
        <animation effect="slide" start="-1945" end="0" time="240">VisibleChange</animation>
        <animation effect="slide" start="-1945,0" end="0,0" delay="800" time="480" condition="Window.Previous(startup)">WindowOpen</animation>
        <control type="image">
          <width>1920</width>
          <height>87</height>
          <texture flipy="true">submenu_bar.png</texture>
        </control>
        <!-- Show Logged in User -->
        <control type="grouplist">
          <orientation>horizontal</orientation>
          <posx>0</posx>
          <posy>46</posy>
          <width>1500</width>
          <height>41</height>
          <align>left</align>
          <aligny>center</aligny>
          <itemgap>0</itemgap>
          <include>Home_UserServerInfo</include>
        </control>
        <!-- Date & Time -->
        <control type="label" id="9025">
          <posx>1905</posx>
          <posy>46</posy>
          <width>400</width>
          <height>41</height>
          <align>right</align>
          <textoffset>15</textoffset>
          <label>$INFO[System.Date,[COLOR grey], | [/COLOR]]$INFO[System.Time]</label>
          <textcolor>$VAR[Colour_HomeWindowThemeColourVar]</textcolor>
          <include condition="!Skin.HasTheme(WhiteFlat)">Font13Title</include>
          <include condition="Skin.HasTheme(WhiteFlat)">Font13Title_WhiteFlat</include>
          <include condition="!Skin.HasTheme(WhiteFlat)">ShadowColour</include>
        </control>
      </control>
    </control>
    <control type="group">
      <posy>453</posy>
      <animation effect="slide" end="0,338" time="320" tween="cubic" easing="inout" condition="!Skin.HasSetting(middlemainmenu)">Conditional</animation>
      <animation type="WindowOpen" reversible="false" condition="Window.Previous(Startup)">
        <effect type="zoom" start="0" end="100" center="960,540" delay="500" time="300" tween="cubic"/>
      </animation>
      <animation type="WindowOpen" reversible="false" condition="!Window.Previous(Startup)">
        <effect type="zoom" start="150" end="100" center="960,540" time="300" tween="cubic"/>
        <effect type="fade" start="50" end="100" time="300"/>
      </animation>
      <animation type="WindowClose" reversible="false">
        <effect type="fade" start="100" end="0" time="300"/>
        <effect type="zoom" start="100" end="130" center="960,540" time="300" tween="cubic" easing="in"/>
      </animation>
      <animation type="Conditional" reversible="false" condition="$EXP[Widgets_HaveFocus] + !Skin.HasSetting(middlemainmenu) + !Skin.HasSetting(Widget.List) + $EXP[Widget_InfoPanelEnabled]">
        <effect type="fade" start="100" end="0" time="300"/>
        <effect type="zoom" start="100" end="130" center="960,540" time="300" tween="cubic" easing="in"/>
      </animation>
      <control type="group">
        <control type="group" id="9001">
          <posx>0</posx>
          <posy>159</posy>
          <onup>300</onup>
          <ondown condition="Skin.HasSetting(middlemainmenu) + $EXP[Widgets_OnDeckAndRecentlyAddedVisible]">11000</ondown>
          <include condition="!Skin.HasSetting(Enable.VisibleSubmenu) + !system.getbool(input.enablemouse)">SubMenuAnimation</include>
          <animation effect="slide" start="1870,0" end="0,0" delay="300" time="240" condition="!Window.Previous(startup)">WindowOpen</animation>
          <animation effect="slide" start="1870,0" end="0,0" delay="200" time="480" condition="Window.Previous(startup)">WindowOpen</animation>
          <!-- Submenu -->
          <control type="image">
            <posx>0</posx>
            <width>1920</width>
            <height>87</height>
            <texture>submenu_bar.png</texture>
          </control>
          <control type="fixedlist" id="9010">
            <posx>210</posx>
            <posy>0</posy>
            <width>1500</width>
            <height>87</height>
            <onup>300</onup>
            <ondown condition="Skin.HasSetting(middlemainmenu) + Control.IsVisible(11000)">11000</ondown>
            <ondown condition="Skin.HasSetting(middlemainmenu) + Control.IsVisible(11003)">11003</ondown>
            <pagecontrol>-</pagecontrol>
            <scrolltime tween="quadratic" easing="out">300</scrolltime>
            <focusposition>2</focusposition>
            <movement>2</movement>
            <orientation>Horizontal</orientation>
            <itemlayout height="87" width="300">
              <control type="label">
                <posx>150</posx>
                <posy>0</posy>
                <width>300</width>
                <height>41</height>
                <textcolor>$VAR[Colour_SubmenuTextColourVar]</textcolor>
                <align>center</align>
                <aligny>center</aligny>
                <label>$INFO[ListItem.Label]</label>
                <include condition="!Skin.HasTheme(WhiteFlat)">Font13Title</include>
                <include condition="Skin.HasTheme(WhiteFlat)">Font13Title_WhiteFlat</include>
                <include condition="!Skin.HasTheme(WhiteFlat)">ShadowColour</include>
              </control>
            </itemlayout>
            <focusedlayout height="87" width="300">
              <control type="image">
                <posx>0</posx>
                <posy>0</posy>
                <width>300</width>
                <height>41</height>
                <aspectratio>stretch</aspectratio>
                <texture>$VAR[listselect_foVar]</texture>
                <colordiffuse>$VAR[Colour_SubmenuHighlightColourVar]</colordiffuse>
              </control>
              <control type="label">
                <posx>150</posx>
                <posy>0</posy>
                <width>300</width>
                <height>41</height>
                <textcolor>$VAR[Colour_SubmenuTextColourVar]</textcolor>
                <align>center</align>
                <aligny>center</aligny>
                <label>$INFO[ListItem.Label]</label>
                <include condition="!Skin.HasTheme(WhiteFlat)">Font13Title</include>
                <include condition="Skin.HasTheme(WhiteFlat)">Font13Title_WhiteFlat</include>
                <include condition="!Skin.HasTheme(WhiteFlat)">ShadowColour</include>
              </control>
            </focusedlayout>
            <content>
              <include>HomeSubMenu</include>
            </content>
          </control>
          <control type="image">
            <posx>130</posx>
            <posy>6</posy>
            <width>30</width>
            <height>30</height>
            <texture flipx="true">arrowright.png</texture>
            <colordiffuse>white</colordiffuse>
            <visible>Container(9010).HasPrevious</visible>
          </control>
          <control type="image">
            <posx>1800</posx>
            <posy>6</posy>
            <width>30</width>
            <height>30</height>
            <texture>arrowright.png</texture>
            <colordiffuse>white</colordiffuse>
            <visible>Container(9010).HasNext</visible>
          </control>
        </control>
        <control type="image">
          <posy>0</posy>
          <width>1920</width>
          <height>225</height>
          <texture>$VAR[Homemenu_BarGraphic]</texture>
        </control>
      </control>
      <!-- Main Menu -->
      <include condition="String.IsEqual(Skin.String(MainMenu.Layout),1 Item) + IsEmpty(Skin.String(MainMenu.Font))">OneMainMenuItemListContent</include>
      <include content="OneMainMenuItemListContent" condition="String.IsEqual(Skin.String(MainMenu.Layout),1 Item) + String.IsEqual(Skin.String(MainMenu.Font),Linear)">
        <param name="font">font_MainMenu_linear</param>
        <param name="top">12</param>
      </include>
      <include content="OneMainMenuItemListContent" condition="String.IsEqual(Skin.String(MainMenu.Layout),1 Item) + String.IsEqual(Skin.String(MainMenu.Font),Open Sans)">
        <param name="font">font_MainMenu_OpenSans</param>
      </include>
      <include content="OneMainMenuItemListContent" condition="String.IsEqual(Skin.String(MainMenu.Layout),1 Item) + String.IsEqual(Skin.String(MainMenu.Font),Source Sans)">
        <param name="font">font_MainMenu_SourceSans</param>
      </include>
      <include content="OneMainMenuItemListContent" condition="String.IsEqual(Skin.String(MainMenu.Layout),1 Item) + String.IsEqual(Skin.String(MainMenu.Font),Trueno)">
        <param name="font">font_MainMenu_Trueno</param>
      </include>
      <include condition="Skin.HasSetting(MainHorizontalListNav) + !String.IsEqual(Skin.String(MainMenu.Layout),1 Item)">MainMenuListFixed</include>
      <include condition="!Skin.HasSetting(MainHorizontalListNav) + !String.IsEqual(Skin.String(MainMenu.Layout),1 Item)">MainMenuListWrapped</include>
      <control type="image">
        <posx>0</posx>
        <posy>58</posy>
        <width>100</width>
        <height>104</height>
        <texture border="1">side_fade.png</texture>
      </control>
      <control type="image">
        <posx>1820</posx>
        <posy>58</posy>
        <width>100</width>
        <height>104</height>
        <texture flipx="true" border="1">side_fade.png</texture>
      </control>
      <control type="image">
        <posy>90</posy>
        <width>1920</width>
        <height>72</height>
        <texture border="1">gradient_floor.png</texture>
        <colordiffuse>$VAR[Colour_ThemeColourVar]</colordiffuse>
      </control>
    </control>
  </include>
  <!-- Vertical Menu -->
  <include name="Home_VerticalMenu">
    <control type="group">
      <visible>Skin.HasSetting(Homemenu.Vertical)</visible>
      <control type="group">
        <animation effect="slide" end="-480,0" time="240">WindowClose</animation>
        <animation effect="slide" start="-480,0" end="0,0" delay="300" time="240" condition="!Window.Previous(startup)">WindowOpen</animation>
        <animation effect="slide" start="-480,0" end="0,0" delay="800" time="480" condition="Window.Previous(startup)">WindowOpen</animation>
        <animation effect="slide" end="-480,0" time="320" tween="cubic" easing="inout" condition="$EXP[Widgets_HaveFocus] + $EXP[Widget_InfoPanelEnabled]">Conditional</animation>
        <!-- Background Panel -->
        <control type="image">
          <width>455</width>
          <height>1080</height>
          <texture colordiffuse="CCFFFFFF" border="40">mediamenu_back.png</texture>
        </control>
        <!-- Submenu Button -->
        <control type="button" id="4999">
          <posy>528</posy>
          <width>25</width>
          <height>25</height>
          <texturefocus flipx="true">arrowright.png</texturefocus>
          <texturenofocus flipx="true">arrowright.png</texturenofocus>
          <onclick>Plex.ActivateWindow(4998)</onclick>
          <include>VisibleFadeEffect</include>
          <colordiffuse>$VAR[Color_HomeSubmenuButtonVar]</colordiffuse>
        </control>
        <include condition="Skin.HasSetting(MainHorizontalListNav) + !system.getbool(input.enablemouse)">VerticalMainMenuListFixed</include>
        <include condition="system.getbool(input.enablemouse)">VerticalMainMenuListFixedMouse</include>
        <include condition="!Skin.HasSetting(MainHorizontalListNav) + !system.getbool(input.enablemouse)">VerticalMainMenuListWrapped</include>
      </control>
    </control>
    <control type="group">
      <animation effect="slide" end="1870,0" time="240">WindowClose</animation>
      <animation effect="slide" start="0,0" end="1460,0" delay="300" time="240" condition="[Control.HasFocus(11000) | Control.HasFocus(11001) | Control.HasFocus(11002) | Control.HasFocus(11003) | Control.HasFocus(11004) | Control.HasFocus(11005)] + $EXP[Widget_InfoPanelEnabled]">Conditional</animation>
      <animation effect="slide" start="1400,0" end="0,0" delay="300" time="240" condition="!window.previous(startup)">WindowOpen</animation>
      <animation effect="slide" start="1400,0" end="0,0" delay="800" time="480" condition="window.previous(startup)">WindowOpen</animation>
      <animation effect="slide" end="0,993" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(Homemenu.LowerInfoBar)">Conditional</animation>
      <posy>0</posy>
      <control type="image">
        <posx>510</posx>
        <width>1820</width>
        <height>87</height>
        <texture>submenu_bar.png</texture>
        <visible>!Skin.HasSetting(Homemenu.LowerInfoBar)</visible>
      </control>
      <control type="image">
        <posx>420</posx>
        <width>90</width>
        <height>87</height>
        <texture>submenu_end.png</texture>
        <visible>!Skin.HasSetting(Homemenu.LowerInfoBar)</visible>
      </control>
      <control type="image">
        <posx>510</posx>
        <width>1820</width>
        <height>87</height>
        <texture flipy="true">submenu_bar.png</texture>
        <visible>Skin.HasSetting(Homemenu.LowerInfoBar)</visible>
      </control>
      <control type="image">
        <posx>420</posx>
        <width>90</width>
        <height>87</height>
        <texture flipy="true">submenu_end.png</texture>
        <visible>Skin.HasSetting(Homemenu.LowerInfoBar)</visible>
      </control>
      <control type="grouplist">
        <animation effect="slide" end="0,45" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(Homemenu.LowerInfoBar)">Conditional</animation>
        <orientation>horizontal</orientation>
        <posx>485</posx>
        <include>Home_UserServerInfo</include>
      </control>
      <control type="grouplist" id="9020">
        <animation effect="slide" end="0,45" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(Homemenu.LowerInfoBar)">Conditional</animation>
        <posx>1110</posx>
        <posy>0</posy>
        <width>800</width>
        <height>41</height>
        <align>right</align>
        <orientation>horizontal</orientation>
        <!-- Space -->
        <control type="label" id="9026">
          <width>5</width>
          <height>41</height>
          <label>-</label>
          <font>font13_title</font>
          <textcolor>$VAR[Colour_HomeWindowThemeColourVar]</textcolor>
        </control>
        <control type="label" id="9025">
          <width min="10" max="1780">auto</width>
          <height>41</height>
          <label>$INFO[System.Date,[COLOR grey], | [/COLOR]]$INFO[System.Time]</label>
          <font>font13_title</font>
          <textcolor>$VAR[Colour_HomeWindowThemeColourVar]</textcolor>
          <shadowcolor>shadow</shadowcolor>
        </control>
      </control>
    </control>
  </include>
  <variable name="ServerInfoVar">
    <value condition="!IsEmpty(Container(300).ListItem(0).Label2) + !Skin.HasSetting(Disable.Serverinfo) + !Skin.HasSetting(Disable.Userinfo) + !IsEmpty(Container(300).ListItem(0).Property(isSecure))">$INFO[System.CurrentUser] | [COLOR $VAR[Colour_HomeWindowThemeColourVar]]$INFO[Container(300).ListItem(0).Label2][/COLOR]</value>
    <value condition="!IsEmpty(Container(300).ListItem(0).Label2) + !Skin.HasSetting(Disable.Serverinfo) + !Skin.HasSetting(Disable.Userinfo) + IsEmpty(Container(300).ListItem(0).Property(isSecure))">$INFO[System.CurrentUser] | $INFO[Container(300).ListItem(0).Label2]</value>
    <value condition="!IsEmpty(Container(300).ListItem(0).Label2) + !Skin.HasSetting(Disable.Serverinfo) + Skin.HasSetting(Disable.Userinfo) + !IsEmpty(Container(300).ListItem(0).Property(isSecure))">[COLOR $VAR[Colour_HomeWindowThemeColourVar]]$INFO[Container(300).ListItem(0).Label2][/COLOR]</value>
    <value condition="!IsEmpty(Container(300).ListItem(0).Label2) + !Skin.HasSetting(Disable.Serverinfo) + Skin.HasSetting(Disable.Userinfo) + IsEmpty(Container(300).ListItem(0).Property(isSecure))">$INFO[Container(300).ListItem(0).Label2]</value>
    <value>$INFO[System.CurrentUser]</value>
  </variable>
  <!-- User and Server Info -->
  <include name="Home_UserServerInfo">
    <control type="label">
      <width>700</width>
      <height>41</height>
      <label>$VAR[ServerInfoVar]</label>
      <textoffsetx>15</textoffsetx>
      <textcolor>grey</textcolor>
      <align>left</align>
      <aligny>center</aligny>
      <include condition="!Skin.HasTheme(WhiteFlat)">Font13Title</include>
      <include condition="Skin.HasTheme(WhiteFlat)">Font13Title_WhiteFlat</include>
      <include condition="!Skin.HasTheme(WhiteFlat)">ShadowColour</include>
      <visible>!Skin.HasSetting(Disable.Userinfo)</visible>
    </control>
  </include>
  <!-- Home Menu Content -->
  <include name="HomeMenuContent">
    <!-- Now Playing -->
    <!--<item id="17">
         <label>$LOCALIZE[42137]</label>
         <onclick>fullscreen</onclick>
         <visible>Player.HasVideo | Player.hasAudio</visible>
         </item>-->
    <!-- Search -->
    <item id="7">
      <description>Search</description>
      <label>$LOCALIZE[137]</label>
      <onclick>Plex.ActivateWindow(10051)</onclick>
      <visible>!Skin.HasSetting(MainMenu.DisableSearch)</visible>
    </item>
    <!-- System -->
    <item>
      <description>System</description>
      <label>$LOCALIZE[13000]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(settings)</onclick>
      <icon>-</icon>
      <thumb>-</thumb>
      <visible>!System.UserIsRestricted</visible>
    </item>
    <!-- Power -->
    <item>
      <description>Power</description>
      <label>$LOCALIZE[33060]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick condition="!System.isSystem(openelec)">Plex.Quit</onclick>
      <onclick condition="System.isSystem(openelec)">Plex.Powerdown</onclick>
    </item>
    <!-- Update -->
    <item id="114">
      <description>Update</description>
      <label>$LOCALIZE[40018]</label>
      <onclick>Plex.UpdateAndRestart</onclick>
      <visible>System.UpdateIsAvailable</visible>
    </item>
    <!-- Weather -->
    <!--<item>
         <description>Weather</description>
         <label>Weather</label>
         <onclick>ActivateWindow(Weather)</onclick>
         </item>-->
    <include>Home_CustomItems</include>
  </include>
  <!-- SubMenu -->
  <include name="HomeSubMenu">
    <!-- Movies and Home Videos (Type 1) -->
    <!-- Movies Submenu Item 1 -->
    <item id="1">
      <description>Movies Submenu Item 1</description>
      <label>$VAR[MoviesSubmenu1_LabelVar]</label>
      <icon>-</icon>
      <onclick condition="IsEmpty(Skin.String(MoviesSubmenu1.Action)) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Unwatched) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Recently Released) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Recently Added) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Recently Viewed) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),On Deck) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Collections) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Genres) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Years) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Decades) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Directors) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Actors) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Countries) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Content Ratings) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Resolution) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),By Letter) | String.IsEqual(Skin.String(MoviesSubmenu1.Action),Folders)">Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick condition="IsEmpty(Skin.String(MoviesSubmenu1.Action))">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/unwatched?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Unwatched)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/unwatched?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Recently Released)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/newest?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Recently Added)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyAdded?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Recently Viewed)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyViewed?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),On Deck)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/onDeck?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Collections)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/collection?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Genres)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/genre?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Years)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/year?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Decades)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/decade?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Directors)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/director?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Actors)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/actor?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Countries)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/country?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Content Ratings)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/contentRating?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Resolution)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/resolution?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),By Letter)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/firstCharacter?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Folders)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/folder?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Search)">Plex.ActivateWindow(10051)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),System)">XBMC.ActivateWindow(settings)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Quit)">Plex.Quit</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Log Off) + System.IsSignedIn">XBMC.ActivateWindow(selectuser)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Log Off) + !System.IsSignedIn">Plex.ActivateWindow(plexlogin)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Channel Directory)">Plex.ActivateWindow(1,plexserver://channeldirectory,return)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),File Manager)">ActivateWindow(filemanager)</onclick>  
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Skin Settings)">ActivateWindow(skinsettings)</onclick>  
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Openelec Settings) + System.isSystem(openelec)">RunAddon(service.openelec.settings)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Control Precaching) + System.isSystem(rasplex)">XBMC.ActivateWindow(10208)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Suspend) + !System.isSystem(rasplex)">Plex.Suspend</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Restart)">System.Exec(reboot)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu1.Action),Shutdown)">Plex.Powerdown</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),movie) + !String.IsEqual(Skin.String(MoviesSubmenu1.Action),None)</visible>
    </item>
    <!-- Movies Submenu Item 2 -->
    <item id="2">
      <description>Movies Submenu Item 2</description>
      <label>$VAR[MoviesSubmenu2_LabelVar]</label>
      <icon>-</icon>
      <onclick condition="IsEmpty(Skin.String(MoviesSubmenu2.Action)) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Unwatched) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Recently Released) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Recently Added) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Recently Viewed) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),On Deck) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Collections) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Genres) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Years) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Decades) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Directors) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Actors) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Countries) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Content Ratings) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Resolution) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),By Letter) | String.IsEqual(Skin.String(MoviesSubmenu2.Action),Folders)">Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick condition="IsEmpty(Skin.String(MoviesSubmenu2.Action))">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/newest?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Unwatched)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/unwatched?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Recently Released)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/newest?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Recently Added)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyAdded?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Recently Viewed)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyViewed?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),On Deck)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/onDeck?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Collections)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/collection?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Genres)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/genre?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Years)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/year?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Decades)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/decade?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Directors)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/director?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Actors)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/actor?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Countries)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/country?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Content Ratings)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/contentRating?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Resolution)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/resolution?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),By Letter)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/firstCharacter?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Folders)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/folder?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Search)">Plex.ActivateWindow(10051)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),System)">XBMC.ActivateWindow(settings)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Quit)">Plex.Quit</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Log Off) + System.IsSignedIn">XBMC.ActivateWindow(selectuser)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Log Off) + !System.IsSignedIn">Plex.ActivateWindow(plexlogin)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Channel Directory)">Plex.ActivateWindow(1,plexserver://channeldirectory,return)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),File Manager)">ActivateWindow(filemanager)</onclick>  
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Skin Settings)">ActivateWindow(skinsettings)</onclick>  
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Openelec Settings) + System.isSystem(openelec)">RunAddon(service.openelec.settings)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Control Precaching) + System.isSystem(rasplex)">XBMC.ActivateWindow(10208)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Suspend) + !System.isSystem(rasplex)">Plex.Suspend</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Restart)">System.Exec(reboot)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu2.Action),Shutdown)">Plex.Powerdown</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),movie) + !String.IsEqual(Skin.String(MoviesSubmenu2.Action),None)</visible>
    </item>
    <!-- Movies Submenu Item 3 -->
    <item id="3">
      <description>Movies Submenu Item 3</description>
      <label>$VAR[MoviesSubmenu3_LabelVar]</label>
      <icon>-</icon>
      <onclick condition="IsEmpty(Skin.String(MoviesSubmenu3.Action)) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Unwatched) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Recently Released) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Recently Added) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Recently Viewed) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),On Deck) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Collections) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Genres) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Years) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Decades) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Directors) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Actors) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Countries) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Content Ratings) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Resolution) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),By Letter) | String.IsEqual(Skin.String(MoviesSubmenu3.Action),Folders)">Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick condition="IsEmpty(Skin.String(MoviesSubmenu3.Action))">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyAdded?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Unwatched)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/unwatched?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Recently Released)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/newest?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Recently Added)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyAdded?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Recently Viewed)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyViewed?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),On Deck)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/onDeck?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Collections)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/collection?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Genres)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/genre?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Years)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/year?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Decades)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/decade?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Directors)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/director?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Actors)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/actor?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Countries)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/country?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Content Ratings)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/contentRating?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Resolution)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/resolution?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),By Letter)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/firstCharacter?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Folders)">XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/folder?type=1)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Search)">Plex.ActivateWindow(10051)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),System)">XBMC.ActivateWindow(settings)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Quit)">Plex.Quit</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Log Off) + System.IsSignedIn">XBMC.ActivateWindow(selectuser)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Log Off) + !System.IsSignedIn">Plex.ActivateWindow(plexlogin)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Channel Directory)">Plex.ActivateWindow(1,plexserver://channeldirectory,return)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),File Manager)">ActivateWindow(filemanager)</onclick>  
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Skin Settings)">ActivateWindow(skinsettings)</onclick>  
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Openelec Settings) + System.isSystem(openelec)">RunAddon(service.openelec.settings)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Control Precaching) + System.isSystem(rasplex)">XBMC.ActivateWindow(10208)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Suspend) + !System.isSystem(rasplex)">Plex.Suspend</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Restart)">System.Exec(reboot)</onclick>
      <onclick condition="String.IsEqual(Skin.String(MoviesSubmenu3.Action),Shutdown)">Plex.Powerdown</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),movie) + !String.IsEqual(Skin.String(MoviesSubmenu3.Action),None)</visible>
    </item>
    <!-- TV Libraries -->
    <item>
      <description>Unwatched</description>
      <label>$LOCALIZE[16101]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/unwatched?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    <item>
      <description>Recently Aired</description>
      <label>$LOCALIZE[42417]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/newest?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    <item>
      <description>Recently Added</description>
      <label>$LOCALIZE[42197]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyAdded?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    <item>
      <description>Recently Viewed</description>
      <label>$LOCALIZE[42416]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyViewed?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    -->
    <!--<item>
         <label>Recently Viewed Shows</label>
         <icon>-</icon>
         <onclick>Skin.SetBool(FilterActive)</onclick>
         <onclick>Dialog.Close(4998)</onclick>
         <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyViewedShows?type=2)</onclick>
         <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
         </item>-->
    <item>
      <description>On Deck</description>
      <label>$LOCALIZE[42023]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/onDeck?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    <item>
      <description>Collections</description>
      <label>$LOCALIZE[42439]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/collection?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    <item>
      <description>Genres</description>
      <label>$LOCALIZE[135]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/genre?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    <item>
      <description>Years</description>
      <label>$LOCALIZE[652]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/year?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    <item>
      <description>Decades</description>
      <label>$LOCALIZE[42440]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/decade?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    <item>
      <description>Actors</description>
      <label>$LOCALIZE[344]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/actor?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    <item>
      <description>Content Ratings</description>
      <label>$LOCALIZE[42441]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/contentRating?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    <item>
      <description>By Letter</description>
      <label>$LOCALIZE[42442]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/firstCharacter?type=2)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
    </item>
    -->
    <!--<item>
         <label>Folders</label>
         <icon>-</icon>
         <onclick>Skin.SetBool(FilterActive)</onclick>
         <onclick>Dialog.Close(4998)</onclick>
         <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/folder?type=2)</onclick>
         <visible>String.IsEqual(Container(300).ListItem.Property(type),show)</visible>
         </item>-->
    <!-- Music (Type 9) -->
    <item>
      <description>Recently Added</description>
      <label>$LOCALIZE[42197]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyAdded?type=9)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),artist)</visible>
    </item>
    <item>
      <description>Artists</description>
      <label>$LOCALIZE[133]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/all?type=9)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),artist)</visible>
    </item>
    <item>
      <description>Albums</description>
      <label>$LOCALIZE[132]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/albums?type=9)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),artist)</visible>
    </item>
    <item>
      <description>Collections</description>
      <label>$LOCALIZE[42439]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/collection?type=9)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),artist)</visible>
    </item>
    <item>
      <description>Genres</description>
      <label>$LOCALIZE[135]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/genre?type=9)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),artist)</visible>
    </item>
    <item>
      <description>Years</description>
      <label>$LOCALIZE[652]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/year?type=9)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),artist)</visible>
    </item>
    <item>
      <description>Decades</description>
      <label>$LOCALIZE[42440]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/decade?type=9)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),artist)</visible>
    </item>
    -->
    <!--<item>
         <label>Folders</label>
         <icon>-</icon>
         <onclick>Skin.SetBool(FilterActive)</onclick>
         <onclick>Dialog.Close(4998)</onclick>
         <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/folder?type=9)</onclick>
         <visible>String.IsEqual(Container(300).ListItem.Property(type),artist)</visible>
         </item>-->
    <!-- Photos (Type 13) -->
    <item>
      <description>Recently Added</description>
      <label>$LOCALIZE[42197]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/recentlyAdded?type=13)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),photoalbum)</visible>
    </item>
    <item>
      <description>Years</description>
      <label>$LOCALIZE[652]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/year?type=13)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),photoalbum)</visible>
    </item>
    <item>
      <description>Camera Make</description>
      <label>$LOCALIZE[21822]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/make?type=13)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),photoalbum)</visible>
    </item>
    <item>
      <description>Camera Model</description>
      <label>$LOCALIZE[21823]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/model?type=13)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),photoalbum)</visible>
    </item>
    <item>
      <description>Aperture</description>
      <label>$LOCALIZE[21826]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/aperture?type=13)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),photoalbum)</visible>
    </item>
    <item>
      <description>Shutter Speed</description>
      <label>$LOCALIZE[42443]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/exposure?type=13)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),photoalbum)</visible>
    </item>
    <item>
      <description>ISO</description>
      <label>$LOCALIZE[21837]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/iso?type=13)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),photoalbum)</visible>
    </item>
    <item>
      <description>Lens</description>
      <label>$LOCALIZE[42444]</label>
      <icon>-</icon>
      <onclick>Skin.SetBool(FilterActive)</onclick>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/lens?type=13)</onclick>
      <visible>String.IsEqual(Container(300).ListItem.Property(type),photoalbum)</visible>
    </item>
    -->
    <!--<item>
         <label>Folders</label>
         <icon>-</icon>
         <onclick>Skin.SetBool(FilterActive)</onclick>
         <onclick>Dialog.Close(4998)</onclick>
         <onclick>XBMC.ActivateWindow(videolibrary,$INFO[Container(300).ListItem.Property(sectionpath)]/folder?type=13)</onclick>
         <visible>String.IsEqual(Container(300).ListItem.Property(type),photoalbum)</visible>
         </item>-->
    <!-- Other -->
    <!-- Log Off -->
    <item>
      <description>Log Off</description>
      <label>$LOCALIZE[20126]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(selectuser)</onclick>
      <visible>System.IsSignedIn + System.UserIsInHome + String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[13000])</visible>
    </item>
    <!-- Sign in -->
    <item>
      <description>Sign In</description>
      <label>$LOCALIZE[42004]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>Plex.ActivateWindow(plexlogin)</onclick>
      <icon>-</icon>
      <thumb>-</thumb>
      <visible>!System.IsSignedIn + String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[13000])</visible>
    </item>
    <!-- Channel Directory -->
    <item>
      <description>Channel Directory</description>
      <label>$LOCALIZE[31952]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>Plex.ActivateWindow(1,plexserver://channeldirectory,return)</onclick>
      <icon>-</icon>
      <thumb>-</thumb>
      <visible>!System.UserIsRestricted + String.IsEqual(Container(300).ListItem.Label,Channels)</visible>
    </item>
    <!-- File Manager -->
    <item>
      <description>File Manager</description>
      <label>$LOCALIZE[42430]</label>
      <!-- STRING: File Manager -->
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>ActivateWindow(filemanager)</onclick>
      <icon>-</icon>
      <thumb>-</thumb>
      <visible>!System.UserIsRestricted + String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[13000])</visible>
    </item>
    <!-- Skin Settings -->
    <item>
      <description>Skin Settings</description>
      <label>$LOCALIZE[20077]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>ActivateWindow(skinsettings)</onclick>
      <icon>-</icon>
      <thumb>-</thumb>
      <visible>!System.UserIsRestricted + String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[13000])</visible>
    </item>
    <!-- Openelec Settings -->
    <item>
      <description>OE Settings Button</description>
      <label>$LOCALIZE[41000]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>RunAddon(service.openelec.settings)</onclick>
      <icon>-</icon>
      <thumb>-</thumb>
      <visible>System.isSystem(openelec) + !System.UserIsRestricted + String.IsEqual(Container(300).Label,$LOCALIZE[13000])</visible>
    </item>
    <!-- Control Global Caching -->
    <item>
      <description>Control Global Caching</description>
      <label>$LOCALIZE[41001]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>XBMC.ActivateWindow(10208)</onclick>
      <icon>-</icon>
      <thumb>-</thumb>
      <visible>System.isSystem(rasplex) + !System.UserIsRestricted + String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[13000])</visible>
    </item>
    <!-- System Info -->
    <item>
      <description>System Info</description>
      <label>$LOCALIZE[10511]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>ActivateWindow(SystemInfo)</onclick>
      <icon>-</icon>
      <thumb>-</thumb>
      <visible>String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[13000])</visible>
    </item>
    <!-- Quit -->
    <item>
      <description>Quit</description>
      <label>$LOCALIZE[13009]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>Plex.Quit</onclick>
      <visible>!System.isSystem(openelec) + String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[33060])</visible>
    </item>
    <!-- Suspend -->
    <item>
      <description>Suspend</description>
      <label>$LOCALIZE[13011]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>Plex.Suspend</onclick>
      <visible>!System.isSystem(rasplex) + String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[33060])</visible>
    </item>
    <!-- Restart -->
    <item>
      <description>Restart</description>
      <label>$LOCALIZE[13013]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>System.Exec(reboot)</onclick>
      <visible>!System.UserIsRestricted + String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[33060])</visible>
    </item>
    <!-- Shutdown -->
    <item>
      <description>Shutdown</description>
      <label>$LOCALIZE[42225]</label>
      <onclick>Dialog.Close(4998)</onclick>
      <onclick>Plex.Powerdown</onclick>
      <visible>!System.UserIsRestricted + String.IsEqual(Container(300).ListItem.Label,$LOCALIZE[33060])</visible>
    </item>
  </include>
  <!-- Main Menu Includes -->
  <include name="MainMenuListContent">
    <param name="font" default="font_MainMenu"/>
    <param name="top" default="0"/>
    <definition>
      <posx>-290</posx>
      <posy>62</posy>
      <width>2800</width>
      <height>100</height>
      <onleft>300</onleft>
      <onright>300</onright>
      <movement>1</movement>
      <onup condition="Control.IsVisible(11001) | Control.IsVisible(11002) | Control.IsVisible(11005)">8001</onup>
      <onup condition="!Control.IsVisible(11004) + Control.IsVisible(11003)">11003</onup>
      <onup condition="[Control.IsVisible(11004) + !Control.IsVisible(11003)] | [Control.IsVisible(11004) + Control.IsVisible(11003)]">11004</onup>
      <onup condition="$EXP[Widgets_RecentlyAddedOnlyVisible]">11000</onup>
      <ondown condition="Skin.HasSetting(middlemainmenu) + Skin.HasSetting(MainMenu.DownToWidgets) + Control.IsVisible(11003)">11003</ondown>
      <ondown condition="Skin.HasSetting(middlemainmenu) + !Skin.HasSetting(MainMenu.DownToWidgets) + Control.IsVisible(11003)">9001</ondown>
      <ondown condition="![Skin.HasSetting(middlemainmenu) + Control.IsVisible(11003)] + [!Skin.HasSetting(middlemainmenu) | !Skin.HasSetting(MainMenu.DownToWidgets)]">9001</ondown>
      <ondown condition="![Skin.HasSetting(middlemainmenu) + Control.IsVisible(11003)] + Skin.HasSetting(middlemainmenu) + Skin.HasSetting(MainMenu.DownToWidgets) + Control.IsVisible(11000)">11000</ondown>
      <ondown condition="![Skin.HasSetting(middlemainmenu) + Control.IsVisible(11003)] + Skin.HasSetting(middlemainmenu) + Skin.HasSetting(MainMenu.DownToWidgets) + !Control.IsVisible(11000)">9001</ondown>
      <pagecontrol>-</pagecontrol>
      <scrolltime tween="quadratic" easing="out">300</scrolltime>
      <focusposition>2</focusposition>
      <orientation>Horizontal</orientation>
      <animation effect="slide" start="0" end="-350,0" time="320" tween="cubic" easing="inout" condition="IsEmpty(Skin.String(MainMenu.Layout))">Conditional</animation>
      <itemlayout height="100" width="500" condition="String.IsEqual(Skin.String(MainMenu.Layout),5 Items)">
        <control type="label">
          <posx>250</posx>
          <posy>$PARAM[top]</posy>
          <width>500</width>
          <height>90</height>
          <font>$PARAM[font]</font>
          <textcolor>$VAR[Colour_MainMenuUnfocussedColourVar]</textcolor>
          <align>center</align>
          <aligny>center</aligny>
          <label>$INFO[ListItem.Label]</label>
        </control>
      </itemlayout>
      <focusedlayout height="100" width="500" condition="String.IsEqual(Skin.String(MainMenu.Layout),5 Items)">
        <control type="label">
          <posx>250</posx>
          <posy>$PARAM[top]</posy>
          <width>500</width>
          <height>90</height>
          <font>$PARAM[font]</font>
          <textcolor>$VAR[Colour_MainMenuFocussedColourVar]</textcolor>
          <align>center</align>
          <aligny>center</aligny>
          <label>$INFO[ListItem.Label]</label>
          <include>VisibleFadeEffect</include>
        </control>
      </focusedlayout>
      <itemlayout height="100" width="640" condition="IsEmpty(Skin.String(MainMenu.Layout))">
        <control type="label">
          <posx>320</posx>
          <posy>$PARAM[top]</posy>
          <width>640</width>
          <height>90</height>
          <font>$PARAM[font]</font>
          <textcolor>$VAR[Colour_MainMenuUnfocussedColourVar]</textcolor>
          <align>center</align>
          <aligny>center</aligny>
          <label>$INFO[ListItem.Label]</label>
        </control>
      </itemlayout>
      <focusedlayout height="100" width="640" condition="IsEmpty(Skin.String(MainMenu.Layout))">
        <control type="label">
          <posx>320</posx>
          <posy>$PARAM[top]</posy>
          <width>640</width>
          <height>90</height>
          <font>$PARAM[font]</font>
          <textcolor>$VAR[Colour_MainMenuFocussedColourVar]</textcolor>
          <align>center</align>
          <aligny>center</aligny>
          <label>$INFO[ListItem.Label]</label>
          <include>VisibleFadeEffect</include>
        </control>
      </focusedlayout>
      <content>
        <include>HomeMenuContent</include>
      </content>
    </definition>
  </include>
  <!-- Horizontal Menu for One Item -->
  <include name="OneMainMenuItemListContent">
    <param name="font" default="font_MainMenu"/>
    <param name="top" default="0"/>
    <definition>
      <control type="wraplist" id="300">
        <posx>0</posx>
        <posy>62</posy>
        <width>1920</width>
        <height>100</height>
        <onleft>300</onleft>
        <onright>300</onright>
        <onup condition="$EXP[Widgets_1stWidgetVisible]">8001</onup>
        <onup condition="!Control.IsVisible(11004) + Control.IsVisible(11003)">11003</onup>
        <onup condition="$EXP[Widgets_RecentlyAddedOnlyVisible]">11000</onup>
        <ondown condition="Skin.HasSetting(middlemainmenu) + Control.IsVisible(11003)">11003</ondown>
        <ondown condition="![Skin.HasSetting(middlemainmenu) + Control.IsVisible(11003)]">9001</ondown>
        <pagecontrol>-</pagecontrol>
        <scrolltime tween="quadratic" easing="out">400</scrolltime>
        <orientation>Horizontal</orientation>
        <itemlayout height="100" width="1920">
          <control type="label">
            <posx>960</posx>
            <posy>$PARAM[top]</posy>
            <width>1920</width>
            <height>90</height>
            <font>$PARAM[font]</font>
            <textcolor>$VAR[Colour_MainMenuUnfocussedColourVar]</textcolor>
            <align>center</align>
            <aligny>center</aligny>
            <label>$INFO[ListItem.Label]</label>
          </control>
        </itemlayout>
        <focusedlayout height="100" width="1920">
          <control type="label">
            <posx>960</posx>
            <posy>$PARAM[top]</posy>
            <width>1920</width>
            <height>90</height>
            <font>$PARAM[font]</font>
            <textcolor>$VAR[Colour_MainMenuFocussedColourVar]</textcolor>
            <align>center</align>
            <aligny>center</aligny>
            <label>$INFO[ListItem.Label]</label>
            <include>VisibleFadeEffect</include>
          </control>
        </focusedlayout>
        <content>
          <include>HomeMenuContent</include>
        </content>
      </control>
    </definition>
  </include>
  <!-- Vertical Menu Content -->
  <include name="VerticalMainMenuListContent">
    <param name="font" default="font_MainMenu_medium2"/>
    <param name="menuTop" default="45"/>
    <param name="menuHeight" default="990"/>
    <param name="focusPosition" default="4"/>
    <param name="itemHeight" default="110"/>
    <definition>
      <posx>37</posx>
      <posy>$PARAM[menuTop]</posy>
      <width>400</width>
      <height>$PARAM[menuHeight]</height>
      <onup>300</onup>
      <ondown>300</ondown>
      <onleft>Plex.ActivateWindow(4998)</onleft>
      <onright condition="Control.IsVisible(11001)">11001</onright>
      <onright condition="Control.IsVisible(11002)">11002</onright>
      <onright condition="Control.IsVisible(11004)">11004</onright>
      <onright condition="Control.IsVisible(11005)">11005</onright>
      <onright condition="$EXP[Widgets_RecentlyAddedOnlyVisible]">11000</onright>
      <onright condition="Control.IsVisible(11003) + !Control.IsVisible(11004)">11003</onright>
      <pagecontrol>-</pagecontrol>
      <focusposition>$PARAM[focusPosition]</focusposition>
      <scrolltime tween="quadratic" easing="out">200</scrolltime>
      <animation effect="fade" time="200" start="100" end="50" reversible="true" condition="Control.HasFocus(9010)">Conditional</animation>
      <itemlayout height="$PARAM[itemHeight]" width="430">
        <control type="label">
          <posx>380</posx>
          <width>380</width>
          <height>$PARAM[itemHeight]</height>
          <font>$PARAM[font]</font>
          <textcolor>$VAR[Colour_MainMenuUnfocussedColourVar]</textcolor>
          <selectedcolor>$VAR[Colour_MainMenuFocussedColourVar]</selectedcolor>
          <align>right</align>
          <aligny>center</aligny>
          <label>$INFO[ListItem.Label]</label>
        </control>
      </itemlayout>
      <focusedlayout height="$PARAM[itemHeight]" width="430">
        <control type="label">
          <posx>380</posx>
          <width>380</width>
          <height>$PARAM[itemHeight]</height>
          <font>$PARAM[font]</font>
          <textcolor>$VAR[Colour_MainMenuFocussedColourVar]</textcolor>
          <selectedcolor>$VAR[Colour_MainMenuFocussedColourVar]</selectedcolor>
          <align>right</align>
          <aligny>center</aligny>
          <label>$INFO[ListItem.Label]</label>
        </control>
      </focusedlayout>
      <content>
        <include>HomeMenuContent</include>
      </content>
    </definition>
  </include>
  <include name="MainMenuList">
    <definition>
      <include content="MainMenuListContent" condition="String.IsEqual(Skin.String(MainMenu.Font),Linear)">
        <param name="font">font_MainMenu_linear</param>
        <param name="top">12</param>
      </include>
      <include content="MainMenuListContent" condition="String.IsEqual(Skin.String(MainMenu.Font),Open Sans)">
        <param name="font">font_MainMenu_OpenSans</param>
      </include>
      <include content="MainMenuListContent" condition="String.IsEqual(Skin.String(MainMenu.Font),Source Sans)">
        <param name="font">font_MainMenu_SourceSans</param>
      </include>
      <include content="MainMenuListContent" condition="String.IsEqual(Skin.String(MainMenu.Font),Trueno)">
        <param name="font">font_MainMenu_Trueno</param>
      </include>
      <include condition="IsEmpty(Skin.String(MainMenu.Font))">MainMenuListContent</include>
    </definition>
  </include>
  <include name="MainMenuListFixed">
    <definition>
      <control type="fixedlist" id="300">
        <include>MainMenuList</include>
      </control>
    </definition>
  </include>
  <include name="MainMenuListWrapped">
    <definition>
      <control type="wraplist" id="300">
        <include>MainMenuList</include>
      </control>
    </definition>
  </include>
  <include name="VerticalMenuList">
    <include content="VerticalMainMenuListContent" condition="String.IsEqual(Skin.String(MainMenu.Font),Linear)">
      <param name="font">font_MainMenu_medium_linear</param>
      <param name="menuTop">20</param>
      <param name="menuHeight">1040</param>
      <param name="focusPosition">6</param>
      <param name="itemHeight">80</param>
    </include>
    <include content="VerticalMainMenuListContent" condition="String.IsEqual(Skin.String(MainMenu.Font),Open Sans)">
      <param name="font">font_MainMenu_medium_OpenSans</param>
      <param name="menuTop">53</param>
      <param name="menuHeight">975</param>
      <param name="focusPosition">6</param>
      <param name="itemHeight">75</param>
    </include>
    <include content="VerticalMainMenuListContent" condition="String.IsEqual(Skin.String(MainMenu.Font),Source Sans)">
      <param name="font">font_MainMenu_medium_SourceSans</param>
      <param name="menuTop">53</param>
      <param name="menuHeight">975</param>
      <param name="focusPosition">6</param>
      <param name="itemHeight">75</param>
    </include>
    <include content="VerticalMainMenuListContent" condition="String.IsEqual(Skin.String(MainMenu.Font),Trueno)">
      <param name="font">font_MainMenu_medium_Trueno</param>
      <param name="menuTop">53</param>
      <param name="menuHeight">975</param>
      <param name="focusPosition">6</param>
      <param name="itemHeight">75</param>
    </include>
    <include condition="IsEmpty(Skin.String(MainMenu.Font))">VerticalMainMenuListContent</include>
  </include>
  <include name="VerticalMainMenuListFixed">
    <control type="fixedlist" id="300">
      <include>VerticalMenuList</include>
    </control>
  </include>
  <include name="VerticalMainMenuListFixedMouse">
    <control type="list" id="300">
      <include>VerticalMenuList</include>
    </control>
  </include>
  <include name="VerticalMainMenuListWrapped">
    <control type="wraplist" id="300">
      <include>VerticalMenuList</include>
    </control>
  </include>
</includes>
