<?xml version="1.0" encoding="UTF-8"?>
<includes>
  <!-- OSD Studio Flag (135x90) -->
  <variable name="OSDStudioFlag_135x90">
	<value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[MusicPlayer.Property(mediaTag-Studio),flags/white/135x90/studios/,.png]</value>
    <value>$INFO[MusicPlayer.Property(mediaTag-Studio),flags/colour/135x90/studios/,.png]</value>
  </variable>
  <!-- OSD Studio Flag (140x95) -->
  <variable name="OSDStudioFlag_140x95">
	<value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[MusicPlayer.Property(mediaTag-Studio),flags/white/140x95/studios/,.png]</value>
    <value>$INFO[MusicPlayer.Property(mediaTag-Studio),flags/colour/140x95/studios/,.png]</value>
  </variable>
  <!-- OSD MPAA Flag -->
  <variable name="OSDMPAAFlag_135x90">
  <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[MusicPlayer.Property(mediaTag-contentRating),flags/white/135x90/mpaa/,.png]</value>
    <value>$INFO[MusicPlayer.Property(mediaTag-contentRating),flags/colour/135x90/mpaa/,.png]</value>
  </variable>
  <!-- OSD MPAA Flag (140x95) -->
  <variable name="OSDMPAAFlag_140x95">
  <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[MusicPlayer.Property(mediaTag-contentRating),flags/white/140x95/mpaa/,.png]</value>
    <value>$INFO[MusicPlayer.Property(mediaTag-contentRating),flags/colour/140x95/mpaa/,.png]</value>
  </variable>
  <!-- OSD Resolution Flag (135x90) -->
  <variable name="OSDResolutionFlag_135x90">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.videoResolution,flags/white/135x90/resolution/,.png]</value>
    <value>$INFO[VideoPlayer.videoResolution,flags/colour/135x90/resolution/,.png]</value>
  </variable>
  <!-- OSD Resolution Flag (140x95) -->
  <variable name="OSDResolutionFlag_140x95">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.videoResolution,flags/white/140x95/resolution/,.png]</value>
    <value>$INFO[VideoPlayer.videoResolution,flags/colour/140x95/resolution/,.png]</value>
  </variable>
  <!-- OSD Resolution Flag (118x80) -->
  <variable name="OSDResolutionFlag_118x80">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.videoResolution,flags/white/118x80/resolution/,.png]</value>
    <value>$INFO[VideoPlayer.videoResolution,flags/colour/118x80/resolution/,.png]</value>
  </variable>
  <!-- OSD Video Codec Flag (135x90) -->
  <variable name="OSDVideoCodecFlag_135x90">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.VideoCodec,flags/white/135x90/video/,.png]</value>
    <value>$INFO[VideoPlayer.VideoCodec,flags/colour/135x90/video/,.png]</value>
  </variable>
  <!-- OSD Video Codec Flag (140x95) -->
  <variable name="OSDVideoCodecFlag_140x95">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.VideoCodec,flags/white/140x95/video/,.png]</value>
    <value>$INFO[VideoPlayer.VideoCodec,flags/colour/140x95/video/,.png]</value>
  </variable>
  <!-- OSD Video Codec Flag (118x80) -->
  <variable name="OSDVideoCodecFlag_118x80">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.VideoCodec,flags/white/118x80/video/,.png]</value>
    <value>$INFO[VideoPlayer.VideoCodec,flags/colour/118x80/video/,.png]</value>
  </variable>
  <!-- OSD Aspect Ratio Flag (135x90) -->
  <variable name="OSDAspectRatioFlag_135x90">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[MusicPlayer.Property(mediaTag-aspectRatio),flags/white/135x90/aspectratio/,.png]</value>
    <value>$INFO[MusicPlayer.Property(mediaTag-aspectRatio),flags/colour/135x90/aspectratio/,.png]</value>
  </variable>
  <!-- OSD Aspect Ratio Flag (140x95) -->
  <variable name="OSDAspectRatioFlag_140x95">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[MusicPlayer.Property(mediaTag-aspectRatio),flags/white/140x95/aspectratio/,.png]</value>
    <value>$INFO[MusicPlayer.Property(mediaTag-aspectRatio),flags/colour/140x95/aspectratio/,.png]</value>
  </variable>
  <!-- OSD Framerate Flag (135x90) -->
  <variable name="OSDFramerateFlag_135x90">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[Listitem.Property(mediaTag-videoFrameRate),flags/white/135x90/framerate/,.png]</value>
    <value>$INFO[Listitem.Property(mediaTag-videoFrameRate),flags/colour/135x90/framerate/,.png]</value>
  </variable>
  <!-- OSD Framerate Flag (140x95) -->
  <variable name="OSDFramerateFlag_140x95">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[MusicPlayer.Property(mediaTag-videoFrameRate),flags/white/140x95/framerate/,.png]</value>
    <value>$INFO[MusicPlayer.Property(mediaTag-videoFrameRate),flags/colour/140x95/framerate/,.png]</value>
  </variable>
  <!-- OSD Audio Codec Flag (135x90) -->
  <variable name="OSDAudioCodecFlag_135x90">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.AudioCodec,flags/white/135x90/audio/,.png]</value>
    <value>$INFO[VideoPlayer.AudioCodec,flags/colour/135x90/audio/,.png]</value>
  </variable>
  <!-- OSD Audio Codec Flag (140x95) -->
  <variable name="OSDAudioCodecFlag_140x95">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.AudioCodec,flags/white/140x95/audio/,.png]</value>
    <value>$INFO[VideoPlayer.AudioCodec,flags/colour/140x95/audio/,.png]</value>
  </variable>
  <!-- OSD Audio Codec Flag (118x80) -->
  <variable name="OSDAudioCodecFlag_118x80">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.AudioCodec,flags/white/118x80/audio/,.png]</value>
    <value>$INFO[VideoPlayer.AudioCodec,flags/colour/118x80/audio/,.png]</value>
  </variable>
  <!-- OSD Audio Channels Flag (135x90) -->
  <variable name="OSDAudioChannelsFlag_135x90">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.AudioChannels,flags/white/135x90/channels/,.png]</value>
    <value>$INFO[VideoPlayer.AudioChannels,flags/colour/135x90/channels/,.png]</value>
  </variable>
  <!-- OSD Audio Channels Flag (140x95) -->
  <variable name="OSDAudioChannelsFlag_140x95">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.AudioChannels,flags/white/140x95/channels/,.png]</value>
    <value>$INFO[VideoPlayer.AudioChannels,flags/colour/140x95/channels/,.png]</value>
  </variable>
  <!-- OSD Audio Channels Flag (118x80) -->
  <variable name="OSDAudioChannelsFlag_118x80">
    <value condition="Skin.HasSetting(General.WhiteMediaFlags)">$INFO[VideoPlayer.AudioChannels,flags/white/118x80/channels/,.png]</value>
    <value>$INFO[VideoPlayer.AudioChannels,flags/colour/118x80/channels/,.png]</value>
  </variable>
  <!-- OSD Rating -->
  <variable name="OSD_Rating">
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,10.0)">10</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,9.0)">9</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,8.0)">8</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,7.0)">7</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,6.0)">6</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,5.0)">5</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,4.0)">4</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,3.0)">3</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,2.0)">2</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,1.0)">1</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,0.0)">0</value>
    <value>$INFO[VideoPlayer.RatingAndVotes]</value>
  </variable>
  <!-- OSD User Rating -->
  <variable name="OSD_UserRating">
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,10.0)">10</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,9.0)">9</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,8.0)">8</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,7.0)">7</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,6.0)">6</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,5.0)">5</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,4.0)">4</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,3.0)">3</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,2.0)">2</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,1.0)">1</value>
    <value condition="String.IsEqual(VideoPlayer.RatingAndVotes,0.0)">0</value>
    <value>$INFO[VideoPlayer.RatingAndVotes]</value>
  </variable>
  <!-- Label for Time Display Setting -->
  <variable name="OSDTimeRemainingLabelVar">
    <value condition="!Skin.HasSetting(OSD.TimeRemaining.Enable)">$LOCALIZE[42320]</value>
    <!-- STRING: Total duration -->
    <value>$LOCALIZE[42319]</value>
    <!-- STRING: Time remaining -->
  </variable>
  <!-- Label for OSD Background Setting -->
  <variable name="OSDBackgroundLabelVar">
    <value condition="!Skin.HasSetting(OSD.OpaqueBackground.Enable)">$LOCALIZE[42140]</value>
    <!-- STRING: Transparent -->
    <value>$LOCALIZE[42141]</value>
    <!-- STRING: Opaque -->
  </variable>
  <!-- Label for OSD Topbar Height -->
  <variable name="OSDTopbarHeightLabelVar">
    <value condition="Skin.HasSetting(OSD.TopBarDoubleHeight)">$LOCALIZE[42446]</value>
    <!-- STRING: Transparent -->
    <value>$LOCALIZE[31390]</value>
    <!-- STRING: Opaque -->
  </variable>
  <!-- Label for Hiding the Topbar in OSD Setting -->
  <variable name="OSDTopbarHideLabelVar">
    <value condition="!Skin.HasSetting(OSD.TopBarHide.Enable)">$LOCALIZE[42092]</value>
    <!-- STRING: Show -->
    <value>$LOCALIZE[42094]</value>
    <!-- STRING: Hide -->
  </variable>
  <!-- Label for the Delay in Hiding the Topbar in OSD Setting -->
  <variable name="OSDTopBarHideDelayLabelVar">
    <value condition="!Skin.HasSetting(OSD.TopBarHide.Enable)">$LOCALIZE[42093]</value>
    <!-- STRING: Disabled -->
    <value condition="IsEmpty(Skin.String(OSD.TopBarHide.Delay))">15 $LOCALIZE[31090]</value>
    <!-- STRING: 15 Seconds -->
    <value>$INFO[Skin.String(OSD.TopBarHide.Delay)] $LOCALIZE[31090]</value>
    <!-- STRING: XX Seconds -->
  </variable>
  <!-- Label for Spinning Disc Options -->
  <variable name="OSDSpinningDiscLabelVar">
    <value condition="String.IsEqual(Skin.String(OSD.SpinningDiscStyle),Disabled)">$LOCALIZE[42093]</value>
    <!-- STRING: Disabled -->
    <value condition="String.IsEqual(Skin.String(OSD.SpinningDiscStyle),DVD/Bluray)">$LOCALIZE[42057]</value>
    <!-- STRING: DVD/Bluray -->
    <value condition="IsEmpty(Skin.String(OSD.SpinningDiscStyle))">$LOCALIZE[42130]</value>
    <!-- STRING: Discart -->
  </variable>
  <!-- Setting for Spinning Disc -->
  <variable name="OSDSpinningDiscSettingVar">
    <value condition="IsEmpty(Skin.String(OSD.SpinningDiscStyle))">Skin.SetString(OSD.SpinningDiscStyle,Disabled)</value>
    <value condition="String.IsEqual(Skin.String(OSD.SpinningDiscStyle),Disabled)">Skin.SetString(OSD.SpinningDiscStyle,DVD/Bluray)</value>
    <value condition="String.IsEqual(Skin.String(OSD.SpinningDiscStyle),DVD/Bluray)">Skin.Reset(OSD.SpinningDiscStyle)</value>
  </variable>
  <!-- Label for Plot Options -->
  <variable name="OSDPlotLabelVar">
    <value condition="String.IsEqual(Skin.String(OSD.Plot),Paused)">$LOCALIZE[42132]</value>
    <!-- STRING: When Paused -->
    <value condition="String.IsEqual(Skin.String(OSD.Plot),Always">$LOCALIZE[42133]</value>
    <!-- STRING: Always -->
    <value condition="IsEmpty(Skin.String(OSD.Plot)">$LOCALIZE[42093]</value>
    <!-- STRING: Disabled -->
  </variable>
  <!-- Setting for Plot Options -->
  <variable name="OSDPlotSettingVar">
    <value condition="IsEmpty(Skin.String(OSD.Plot))">Skin.SetString(OSD.Plot,Paused)</value>
    <value condition="String.IsEqual(Skin.String(OSD.Plot),Paused)">Skin.SetString(OSD.Plot,Always)</value>
    <value condition="String.IsEqual(Skin.String(OSD.Plot),Always)">Skin.Reset(OSD.Plot)</value>
  </variable>
  <!-- Setting for the Delay in Hiding the Topbar in OSD -->
  <!-- Values range from 5 Seconds to 30 Seconds -->
  <variable name="OSDTopBarHideDelaySettingVar">
    <value condition="IsEmpty(Skin.String(OSD.TopBarHide.Delay))">Skin.SetString(OSD.TopBarHide.Delay,20)</value>
    <value condition="String.IsEqual(Skin.String(OSD.TopBarHide.Delay),20)">Skin.SetString(OSD.TopBarHide.Delay,25)</value>
    <value condition="String.IsEqual(Skin.String(OSD.TopBarHide.Delay),25)">Skin.SetString(OSD.TopBarHide.Delay,30)</value>
    <value condition="String.IsEqual(Skin.String(OSD.TopBarHide.Delay),30)">Skin.SetString(OSD.TopBarHide.Delay,5)</value>
    <value condition="String.IsEqual(Skin.String(OSD.TopBarHide.Delay),5)">Skin.SetString(OSD.TopBarHide.Delay,10)</value>
    <value condition="String.IsEqual(Skin.String(OSD.TopBarHide.Delay),10)">Skin.Reset(OSD.TopBarHide.Delay)</value>
  </variable>
  <!-- OSD Resolution Flag Style Label (Mini/Full) -->
  <variable name="OSDResolutionFlagLabelVar">
    <value condition="!Skin.HasSetting(OSD.FullResolutionFlag.Enable)">$LOCALIZE[42120]</value>
    <!-- STRING: Mini -->
    <value>$LOCALIZE[42121]</value>
    <!-- STRING: Full -->
  </variable>
  <!-- Video Title -->
  <variable name="OSDTitleVar">
    <value condition="VideoPlayer.Content(movies)">[B][UPPERCASE]$INFO[Player.Title][/UPPERCASE] $INFO[VideoPlayer.Year,(,)][/B]</value>
    <!-- Display Movie Title -->
    <value condition="VideoPlayer.Content(episodes) + !IsEmpty(VideoPlayer.Season)">[B]$INFO[VideoPlayer.Season]x$INFO[VideoPlayer.Episode]. [UPPERCASE]$INFO[Player.Title][/UPPERCASE][/B]</value>
    <!-- Display TV Episode Title -->
    <value condition="VideoPlayer.Content(episodes) + IsEmpty(VideoPlayer.Season)">[B]S$INFO[VideoPlayer.Episode]. [UPPERCASE]$INFO[Player.Title][/UPPERCASE][/B]</value>
    <!-- Display TV Special Title -->
    <value>[UPPERCASE]$INFO[Player.Title][/UPPERCASE]</value>
    <!-- Display Other Video Title -->
  </variable>
  <!-- Display Current State of Video Player -->
  <variable name="OSDStatusVar">
    <value condition="Player.Paused + !Player.Seeking + !Player.Caching">$LOCALIZE[112]</value>
    <!-- STRING: Paused -->
    <value condition="Player.Forwarding2x | Player.Forwarding4x | Player.Forwarding8x | Player.Forwarding16x | Player.Forwarding32x">$LOCALIZE[42105]</value>
    <!-- STRING: Fast Forward -->
    <value condition="Player.Rewinding2x | Player.Rewinding4x | Player.Rewinding8x | Player.Rewinding16x | Player.Rewinding32x">$LOCALIZE[42106]</value>
    <!-- STRING: Rewind -->
    <value condition="Player.Playing + !Player.DisplayAfterSeek">$LOCALIZE[42107]</value>
    <!-- STRING: Playing -->
    <value condition="!Player.Paused + Player.DisplayAfterSeek">$LOCALIZE[31046]</value>
    <!-- STRING: Seeking -->
  </variable>
  <!-- Label for OSD Buttons -->
  <variable name="OSDDefaultButtonLabelVar">
    <value condition="IsEmpty(Skin.String(OSD.DefaultButton))">$LOCALIZE[42109]</value>
    <!-- STRING: Play -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Playlists)">$LOCALIZE[42110]</value>
    <!-- STRING: Playlists -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Bookmarks)">$LOCALIZE[42111]</value>
    <!-- STRING: Bookmarks -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Subtitles)">$LOCALIZE[31133]</value>
    <!-- STRING: Subtitles -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Previous)">$LOCALIZE[42112]</value>
    <!-- STRING: Previous -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Rewind)">$LOCALIZE[42106]</value>
    <!-- STRING: Rewind -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Stop)">$LOCALIZE[42113]</value>
    <!-- STRING: Stop -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Fast Forward)">$LOCALIZE[42105]</value>
    <!-- STRING: Fast Forward -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Next)">$LOCALIZE[42114]</value>
    <!-- STRING: Next -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Screenshot)">$LOCALIZE[42127]</value>
    <!-- STRING: Screenshot -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Video Settings)">$LOCALIZE[42115]</value>
    <!-- STRING: Video Settings -->
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Audio Settings)">$LOCALIZE[42116]</value>
    <!-- STRING: Audio Settings -->
  </variable>
  <!-- Setting for Default OSD Button -->
  <variable name="DefaultOSDButtonSetting">
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Audio Settings)">Skin.SetString(OSD.DefaultButton,Playlists)</value>
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Playlists)">Skin.SetString(OSD.DefaultButton,Bookmarks)</value>
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Bookmarks)">Skin.SetString(OSD.DefaultButton,Subtitles)</value>
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Subtitles)">Skin.SetString(OSD.DefaultButton,Previous)</value>
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Previous)">Skin.SetString(OSD.DefaultButton,Rewind)</value>
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Rewind)">Skin.SetString(OSD.DefaultButton,Stop)</value>
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Stop)">Skin.Reset(OSD.DefaultButton)</value>
    <value condition="IsEmpty(Skin.String(OSD.DefaultButton))">Skin.SetString(OSD.DefaultButton,Fast Forward)</value>
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Fast Forward)">Skin.SetString(OSD.DefaultButton,Next)</value>
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Next)">Skin.SetString(OSD.DefaultButton,Screenshot)</value>
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Screenshot)">Skin.SetString(OSD.DefaultButton,Video Settings)</value>
    <value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Video Settings)">Skin.SetString(OSD.DefaultButton,Audio Settings)</value>
  </variable>
  <!-- Label for Video Icon Setting -->
  <variable name="OSDVideoIconLabelVar">
    <value condition="IsEmpty(Skin.String(OSD.VideoIconStyle))">$LOCALIZE[42058]</value>
    <!-- STRING: Poster -->
    <value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Clear)">$LOCALIZE[42125]</value>
    <!-- STRING: Clear -->
    <value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Glass)">$LOCALIZE[42056]</value>
    <!-- STRING: Glass -->
    <value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),DVD/Bluray)">$LOCALIZE[42057]</value>
    <!-- STRING: DVD/Bluray -->
    <value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Disabled)">$LOCALIZE[42093]</value>
    <!-- STRING: Disabled -->
  </variable>
  <!-- Setting for Video Icon Style -->
  <variable name="OSDVideoIconSettingVar">
    <value condition="IsEmpty(Skin.String(OSD.VideoIconStyle))">Skin.SetString(OSD.VideoIconStyle,Clear)</value>
    <value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Clear)">Skin.SetString(OSD.VideoIconStyle,Glass)</value>
    <value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Glass)">Skin.SetString(OSD.VideoIconStyle,DVD/Bluray)</value>
    <value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),DVD/Bluray)">Skin.SetString(OSD.VideoIconStyle,Disabled)</value>
    <value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Disabled)">Skin.Reset(OSD.VideoIconStyle)</value>
    <!-- DEFAULT: Poster -->
  </variable>
  <!-- Video Icon Poster -->
  <variable name="OSDPosterArtworkVar">
    <value condition="VideoPlayer.Content(episodes)">$INFO[Player.Art(grandparentThumb)]</value>
    <value condition="VideoPlayer.Content(movies)">$INFO[Player.Art(thumb)]</value>
  </variable>
  <!-- Fast Forward / Rewind Speed Text -->
  <variable name="OSDForwardRewindVar">
    <value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
    <value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
    <value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
    <value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
    <value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
  </variable>
  <!-- Music Repeat Button -->
  <variable name="MusicOSDRepeatButtonVar">
    <value condition="[!Playlist.IsRepeat + !Playlist.IsRepeatOne] + !Control.HasFocus(707)">osd/buttons/OSDRepeatNF.png</value>
    <value condition="Playlist.IsRepeatOne+!Control.HasFocus(707)">osd/buttons/OSDRepeatOneNF.png</value>
    <value condition="Playlist.IsRepeat+!Control.HasFocus(707)">osd/buttons/OSDRepeatAllNF.png</value>
    <value condition="[!Playlist.IsRepeat + !Playlist.IsRepeatOne] + Control.HasFocus(707)">osd/buttons/OSDRepeatFO.png</value>
    <value condition="Playlist.IsRepeatOne+ Control.HasFocus(707)">osd/buttons/OSDRepeatOneFO.png</value>
    <value condition="Playlist.IsRepeat+ Control.HasFocus(707)">osd/buttons/OSDRepeatAllFO.png</value>
  </variable>
  <!-- OSD Plot -->
  <variable name="OSDPlot">
    <value condition="!IsEmpty(VideoPlayer.Plot) + VideoPlayer.Content(episodes) + Skin.HasSetting(Disable.UnwatchedPlot)">$LOCALIZE[42277]</value>
    <value condition="!IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
    <value condition="VideoPlayer.Content(episodes)">$LOCALIZE[42129].[CR]$LOCALIZE[32104].</value>
    <!-- STRING: There is no description available for this episode. You can add one for it in the Media Manager. -->
    <value>$LOCALIZE[42128].[CR]$LOCALIZE[32104].</value>
    <!-- STRING: There is no description available for this video. You can add one for it in the Media Manager. -->
  </variable>
  <!-- OSD Genre / Show Name -->
  <variable name="OSDGenreShowName">
    <value condition="VideoPlayer.Content(episodes)">[UPPERCASE][B]$INFO[VideoPlayer.TVShowTitle][/B][/UPPERCASE]</value>
    <value>$INFO[VideoPlayer.Genre]</value>
  </variable>
  <!-- OSD Simulated Discart Second Label -->
  <variable name="OSDSimulatedDiscartLabel2Var">
    <value condition="VideoPlayer.Content(episodes) + !IsEmpty(VideoPlayer.Season)">$LOCALIZE[20373] $INFO[VideoPlayer.Season]</value>
    <!-- STRING: Season -->
    <value condition="VideoPlayer.Content(episodes) + IsEmpty(VideoPlayer.Season)">$LOCALIZE[20381]</value>
    <!-- STRING: Specials -->
    <value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Title]</value>
  </variable>
  <!-- Simulated Discart -->
  <variable name="OSDringcdVar">
    <value condition="String.StartsWith(VideoPlayer.Title,s) | String.StartsWith(VideoPlayer.Title,a) | String.StartsWith(VideoPlayer.Title,j) | String.StartsWith(VideoPlayer.Title,S) | String.StartsWith(VideoPlayer.Title,A) | String.StartsWith(VideoPlayer.Title,J)">thumbs/ring2.png</value>
    <value condition="String.StartsWith(VideoPlayer.Title,m) | String.StartsWith(VideoPlayer.Title,c) | String.StartsWith(VideoPlayer.Title,l) | String.StartsWith(VideoPlayer.Title,M) | String.StartsWith(VideoPlayer.Title,C) | String.StartsWith(VideoPlayer.Title,L)">thumbs/ring1.png</value>
    <value condition="String.StartsWith(VideoPlayer.Title,t) | String.StartsWith(VideoPlayer.Title,e) | String.StartsWith(VideoPlayer.Title,b) | String.StartsWith(VideoPlayer.Title,T) | String.StartsWith(VideoPlayer.Title,E) | String.StartsWith(VideoPlayer.Title,B)">thumbs/ring3.png</value>
    <value condition="String.StartsWith(VideoPlayer.Title,k) | String.StartsWith(VideoPlayer.Title,r) | String.StartsWith(VideoPlayer.Title,d) | String.StartsWith(VideoPlayer.Title,K) | String.StartsWith(VideoPlayer.Title,R) | String.StartsWith(VideoPlayer.Title,D)">thumbs/ring4.png</value>
    <value condition="String.StartsWith(VideoPlayer.Title,n) | String.StartsWith(VideoPlayer.Title,p) | String.StartsWith(VideoPlayer.Title,u) | String.StartsWith(VideoPlayer.Title,N) | String.StartsWith(VideoPlayer.Title,P) | String.StartsWith(VideoPlayer.Title,U)">thumbs/ring5.png</value>
    <value condition="String.StartsWith(VideoPlayer.Title,v) | String.StartsWith(VideoPlayer.Title,g) | String.StartsWith(VideoPlayer.Title,o) | String.StartsWith(VideoPlayer.Title,V) | String.StartsWith(VideoPlayer.Title,G) | String.StartsWith(VideoPlayer.Title,O)">thumbs/ring6.png</value>
    <value condition="String.StartsWith(VideoPlayer.Title,f) | String.StartsWith(VideoPlayer.Title,w) | String.StartsWith(VideoPlayer.Title,i) | String.StartsWith(VideoPlayer.Title,F) | String.StartsWith(VideoPlayer.Title,W) | String.StartsWith(VideoPlayer.Title,I) | String.StartsWith(VideoPlayer.Title,1) | String.StartsWith(VideoPlayer.Title,2) | String.StartsWith(VideoPlayer.Title,3) | String.StartsWith(VideoPlayer.Title,4) | String.StartsWith(VideoPlayer.Title,5)">thumbs/ring7.png</value>
    <value condition="String.StartsWith(VideoPlayer.Title,h) | String.StartsWith(VideoPlayer.Title,z) | String.StartsWith(VideoPlayer.Title,q) | String.StartsWith(VideoPlayer.Title,x) | String.StartsWith(VideoPlayer.Title,y) |String.StartsWith(VideoPlayer.Title,H) | String.StartsWith(VideoPlayer.Title,Z) | String.StartsWith(VideoPlayer.Title,Q) | String.StartsWith(VideoPlayer.Title,X) | String.StartsWith(VideoPlayer.Title,Y) | String.StartsWith(VideoPlayer.Title,6) | String.StartsWith(VideoPlayer.Title,7) | String.StartsWith(VideoPlayer.Title,8) | String.StartsWith(VideoPlayer.Title,9) | String.StartsWith(VideoPlayer.Title,0)">thumbs/ring8.png</value>
    <value>thumbs/ring1.png</value>
  </variable>
</includes>
