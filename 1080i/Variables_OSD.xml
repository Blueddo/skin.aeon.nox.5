<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<!-- OSD Rating -->
	<variable name="OSD_Rating">
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,10.0)">10</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,9.0)">9</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,8.0)">8</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,7.0)">7</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,6.0)">6</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,5.0)">5</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,4.0)">4</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,3.0)">3</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,2.0)">2</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,1.0)">1</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,0.0)">0</value>
		<value>$INFO[VideoPlayer.RatingAndVotes]</value>
	</variable>
	
	<!-- OSD User Rating -->
	<variable name="OSD_UserRating">
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,10.0)">10</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,9.0)">9</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,8.0)">8</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,7.0)">7</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,6.0)">6</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,5.0)">5</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,4.0)">4</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,3.0)">3</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,2.0)">2</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,1.0)">1</value>
		<value condition="String.IsEqual(VideoPlayer.RatingAndVotes,0.0)">0</value>
		<value>$INFO[VideoPlayer.RatingAndVotes]</value>
	</variable>

	<!-- Label for Time Display Setting -->
	<variable name="OSDTimeRemainingLabelVar">
		<value condition="!Skin.HasSetting(OSD.TimeRemaining.Enable)">$LOCALIZE[42320]</value> <!-- STRING: Total duration -->
		<value>$LOCALIZE[42319]</value> <!-- STRING: Time remaining -->
	</variable>

	<!-- Label for OSD Background Setting -->
	<variable name="OSDBackgroundLabelVar">
		<value condition="!Skin.HasSetting(OSD.OpaqueBackground.Enable)">$LOCALIZE[42140]</value> <!-- STRING: Transparent -->
		<value>$LOCALIZE[42141]</value> <!-- STRING: Opaque -->
	</variable>

	<!-- Label for Hiding the Topbar in OSD Setting -->
	<variable name="OSDTopbarHideLabelVar">
		<value condition="!Skin.HasSetting(OSD.TopBarHide.Enable)">$LOCALIZE[42092]</value> <!-- STRING: Show -->
		<value>$LOCALIZE[42094]</value> <!-- STRING: Hide -->
	</variable>
	
	<!-- Label for the Delay in Hiding the Topbar in OSD Setting -->
	<variable name="OSDTopBarHideDelayLabelVar">
		<value condition="!Skin.HasSetting(OSD.TopBarHide.Enable)">$LOCALIZE[42093]</value> <!-- STRING: Disabled -->
		<value condition="IsEmpty(Skin.String(OSD.TopBarHide.Delay))">15 $LOCALIZE[31090]</value> <!-- STRING: 15 Seconds -->
		<value>$INFO[Skin.String(OSD.TopBarHide.Delay)] $LOCALIZE[31090]</value> <!-- STRING: XX Seconds -->
	</variable>
	
	<!-- Label for Spinning Disc Options -->
	<variable name="OSDSpinningDiscLabelVar">
		<value condition="String.IsEqual(Skin.String(OSD.SpinningDiscStyle),Disabled)">$LOCALIZE[42093]</value> <!-- STRING: Disabled -->
		<value condition="String.IsEqual(Skin.String(OSD.SpinningDiscStyle),DVD/Bluray)">$LOCALIZE[42057]</value> <!-- STRING: DVD/Bluray -->
		<value condition="IsEmpty(Skin.String(OSD.SpinningDiscStyle))">$LOCALIZE[42130]</value> <!-- STRING: Discart -->
	</variable>
	
	<!-- Setting for Spinning Disc -->
	<variable name="OSDSpinningDiscSettingVar">
		<value condition="IsEmpty(Skin.String(OSD.SpinningDiscStyle))">Skin.SetString(OSD.SpinningDiscStyle,Disabled)</value>
        <value condition="String.IsEqual(Skin.String(OSD.SpinningDiscStyle),Disabled)">Skin.SetString(OSD.SpinningDiscStyle,DVD/Bluray)</value>
		<value condition="String.IsEqual(Skin.String(OSD.SpinningDiscStyle),DVD/Bluray)">Skin.Reset(OSD.SpinningDiscStyle)</value>
    </variable>
	
	<!-- Label for Plot Options -->
	<variable name="OSDPlotLabelVar">
		<value condition="String.IsEqual(Skin.String(OSD.Plot),Paused)">$LOCALIZE[42132]</value> <!-- STRING: When Paused -->
		<value condition="String.IsEqual(Skin.String(OSD.Plot),Always">$LOCALIZE[42133]</value> <!-- STRING: Always -->
		<value condition="IsEmpty(Skin.String(OSD.Plot)">$LOCALIZE[42093]</value> <!-- STRING: Disabled -->
	</variable>
	
	<!-- Setting for Plot Options -->
	<variable name="OSDPlotSettingVar">
		<value condition="IsEmpty(Skin.String(OSD.Plot))">Skin.SetString(OSD.Plot,Paused)</value>
        <value condition="String.IsEqual(Skin.String(OSD.Plot),Paused)">Skin.SetString(OSD.Plot,Always)</value>
		<value condition="String.IsEqual(Skin.String(OSD.Plot),Always)">Skin.Reset(OSD.Plot)</value>
    </variable>
		
	<!-- Setting for the Delay in Hiding the Topbar in OSD -->
	<!-- Values range from 5 Seconds to 30 Seconds -->
	<variable name="OSDTopBarHideDelaySettingVar">
		<value condition="IsEmpty(Skin.String(OSD.TopBarHide.Delay))">Skin.SetString(OSD.TopBarHide.Delay,20)</value>
        <value condition="String.IsEqual(Skin.String(OSD.TopBarHide.Delay),20)">Skin.SetString(OSD.TopBarHide.Delay,25)</value>
		<value condition="String.IsEqual(Skin.String(OSD.TopBarHide.Delay),25)">Skin.SetString(OSD.TopBarHide.Delay,30)</value>
		<value condition="String.IsEqual(Skin.String(OSD.TopBarHide.Delay),30)">Skin.SetString(OSD.TopBarHide.Delay,5)</value>
		<value condition="String.IsEqual(Skin.String(OSD.TopBarHide.Delay),5)">Skin.SetString(OSD.TopBarHide.Delay,10)</value>
        <value condition="String.IsEqual(Skin.String(OSD.TopBarHide.Delay),10)">Skin.Reset(OSD.TopBarHide.Delay)</value>
    </variable>
	
	<!-- OSD Resolution Flag Style Label (Mini/Full) -->
	<variable name="OSDResolutionFlagLabelVar">
		<value condition="!Skin.HasSetting(OSD.FullResolutionFlag.Enable)">$LOCALIZE[42120]</value> <!-- STRING: Mini -->
		<value>$LOCALIZE[42121]</value> <!-- STRING: Full -->
	</variable>
	
	<!-- Video Title -->
	<variable name="OSDTitleVar">
		<value condition="VideoPlayer.Content(movies)">[B][UPPERCASE]$INFO[Player.Title][/UPPERCASE] $INFO[VideoPlayer.Year,(,)][/B]</value> <!-- Display Movie Title -->
		<value condition="VideoPlayer.Content(episodes) + !IsEmpty(VideoPlayer.Season)">[B]$INFO[VideoPlayer.Season]x$INFO[VideoPlayer.Episode]. [UPPERCASE]$INFO[Player.Title][/UPPERCASE][/B]</value> <!-- Display TV Episode Title -->
		<value condition="VideoPlayer.Content(episodes) + IsEmpty(VideoPlayer.Season)">[B]S$INFO[VideoPlayer.Episode]. [UPPERCASE]$INFO[Player.Title][/UPPERCASE][/B]</value> <!-- Display TV Special Title -->
		<value>[UPPERCASE]$INFO[Player.Title][/UPPERCASE]</value> <!-- Display Other Video Title -->
	</variable>
	
	<!-- Display Current State of Video Player -->
	<variable name="OSDStatusVar">
		<value condition="Player.Paused + !Player.Seeking + !Player.Caching">$LOCALIZE[112]</value> <!-- STRING: Paused -->
		<value condition="Player.Forwarding2x | Player.Forwarding4x | Player.Forwarding8x | Player.Forwarding16x | Player.Forwarding32x">$LOCALIZE[42105]</value> <!-- STRING: Fast Forward -->
		<value condition="Player.Rewinding2x | Player.Rewinding4x | Player.Rewinding8x | Player.Rewinding16x | Player.Rewinding32x">$LOCALIZE[42106]</value> <!-- STRING: Rewind -->
		<value condition="Player.Playing + !Player.DisplayAfterSeek">$LOCALIZE[42107]</value> <!-- STRING: Playing -->
		<value condition="!Player.Paused + Player.DisplayAfterSeek">$LOCALIZE[31046]</value> <!-- STRING: Seeking -->
	</variable>
	
	<!-- Label for OSD Buttons -->
	<variable name="OSDDefaultButtonLabelVar">
		<value condition="IsEmpty(Skin.String(OSD.DefaultButton))">$LOCALIZE[42109]</value> <!-- STRING: Play -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Playlists)">$LOCALIZE[42110]</value> <!-- STRING: Playlists -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Bookmarks)">$LOCALIZE[42111]</value> <!-- STRING: Bookmarks -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Subtitles)">$LOCALIZE[31133]</value> <!-- STRING: Subtitles -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Previous)">$LOCALIZE[42112]</value> <!-- STRING: Previous -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Rewind)">$LOCALIZE[42106]</value> <!-- STRING: Rewind -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Stop)">$LOCALIZE[42113]</value> <!-- STRING: Stop -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Fast Forward)">$LOCALIZE[42105]</value> <!-- STRING: Fast Forward -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Next)">$LOCALIZE[42114]</value> <!-- STRING: Next -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Screenshot)">$LOCALIZE[42127]</value> <!-- STRING: Screenshot -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Video Settings)">$LOCALIZE[42115]</value> <!-- STRING: Video Settings -->
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Audio Settings)">$LOCALIZE[42116]</value> <!-- STRING: Audio Settings -->
	</variable>
	
	<!-- Setting for Default OSD Button -->
	<variable name="DefaultOSDButtonSetting">
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Audio Settings)">Skin.SetString(OSD.DefaultButton,Playlists)</value>
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Playlists)">Skin.SetString(OSD.DefaultButton,Bookmarks)</value>
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Bookmarks)">Skin.SetString(OSD.DefaultButton,Subtitles)</value>
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Subtitles)">Skin.SetString(OSD.DefaultButton,Previous)</value>
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Previous)">Skin.SetString(OSD.DefaultButton,Rewind)</value>
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Rewind)">Skin.SetString(OSD.DefaultButton,Stop)</value>
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Stop)">Skin.Reset(OSD.DefaultButton)</value> 
		<value condition="IsEmpty(Skin.String(OSD.DefaultButton))">Skin.SetString(OSD.DefaultButton,Fast Forward)</value>
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Fast Forward)">Skin.SetString(OSD.DefaultButton,Next)</value>
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Next)">Skin.SetString(OSD.DefaultButton,Screenshot)</value>
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Screenshot)">Skin.SetString(OSD.DefaultButton,Video Settings)</value>
		<value condition="String.IsEqual(Skin.String(OSD.DefaultButton),Video Settings)">Skin.SetString(OSD.DefaultButton,Audio Settings)</value>
	</variable>
	
	<!-- Label for Video Icon Setting -->
	<variable name="OSDVideoIconLabelVar">
		<value condition="IsEmpty(Skin.String(OSD.VideoIconStyle))">$LOCALIZE[42058]</value>  <!-- STRING: Poster -->
		<value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Clear)">$LOCALIZE[42125]</value> <!-- STRING: Clear -->
		<value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Glass)">$LOCALIZE[42056]</value> <!-- STRING: Glass -->
		<value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),DVD/Bluray)">$LOCALIZE[42057]</value> <!-- STRING: DVD/Bluray -->
		<value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Disabled)">$LOCALIZE[42093]</value> <!-- STRING: Disabled -->
	</variable>
	
	<!-- Setting for Video Icon Style -->
	<variable name="OSDVideoIconSettingVar">
		<value condition="IsEmpty(Skin.String(OSD.VideoIconStyle))">Skin.SetString(OSD.VideoIconStyle,Clear)</value>
		<value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Clear)">Skin.SetString(OSD.VideoIconStyle,Glass)</value>
		<value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Glass)">Skin.SetString(OSD.VideoIconStyle,DVD/Bluray)</value>
		<value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),DVD/Bluray)">Skin.SetString(OSD.VideoIconStyle,Disabled)</value>
		<value condition="String.IsEqual(Skin.String(OSD.VideoIconStyle),Disabled)">Skin.Reset(OSD.VideoIconStyle)</value> <!-- DEFAULT: Poster -->
	</variable>
	
	<!-- Video Icon Poster -->
	<variable name="OSDPosterArtworkVar">
		<value condition="VideoPlayer.Content(episodes)">$INFO[Player.Art(grandparentThumb)]</value>
		<value condition="VideoPlayer.Content(movies)">$INFO[Player.Art(thumb)]</value>
	</variable>
	
	<!-- Fast Forward / Rewind Speed Text -->
	<variable name="OSDForwardRewindVar">
		<value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
	</variable>
	
	<!-- Music Repeat Button -->
	<variable name="MusicOSDRepeatButtonVar">
        <value condition="[!Playlist.IsRepeat + !Playlist.IsRepeatOne] + !Control.HasFocus(707)">osd/buttons/OSDRepeatNF.png</value>
        <value condition="Playlist.IsRepeatOne+!Control.HasFocus(707)">osd/buttons/OSDRepeatOneNF.png</value>
        <value condition="Playlist.IsRepeat+!Control.HasFocus(707)">osd/buttons/OSDRepeatAllNF.png</value>
        <value condition="[!Playlist.IsRepeat + !Playlist.IsRepeatOne] + Control.HasFocus(707)">osd/buttons/OSDRepeatFO.png</value>
        <value condition="Playlist.IsRepeatOne+ Control.HasFocus(707)">osd/buttons/OSDRepeatOneFO.png</value>
        <value condition="Playlist.IsRepeat+ Control.HasFocus(707)">osd/buttons/OSDRepeatAllFO.png</value>
    </variable>
	
	<!-- OSD Plot -->
	<variable name="OSDPlot">
		<value condition="!IsEmpty(VideoPlayer.Plot) + VideoPlayer.Content(episodes) + Skin.HasSetting(Disable.UnwatchedPlot)">$LOCALIZE[42277]</value>
		<value condition="!IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
		<value condition="VideoPlayer.Content(episodes)">$LOCALIZE[42129].[CR]$LOCALIZE[32104].</value> <!-- STRING: There is no description available for this episode. You can add one for it in the Media Manager. -->
		<value>$LOCALIZE[42128].[CR]$LOCALIZE[32104].</value> <!-- STRING: There is no description available for this video. You can add one for it in the Media Manager. -->
	</variable>
	
	<!-- OSD Genre / Show Name -->
	<variable name="OSDGenreShowName">
		<value condition="VideoPlayer.Content(episodes)">[UPPERCASE][B]$INFO[VideoPlayer.TVShowTitle][/B][/UPPERCASE]</value>
		<value>$INFO[VideoPlayer.Genre]</value>
	</variable>
		
	<!-- OSD Simulated Discart Second Label -->
	<variable name="OSDSimulatedDiscartLabel2Var">
		<value condition="VideoPlayer.Content(episodes) + !IsEmpty(VideoPlayer.Season)">$LOCALIZE[20373] $INFO[VideoPlayer.Season]</value> <!-- STRING: Season -->
		<value condition="VideoPlayer.Content(episodes) + IsEmpty(VideoPlayer.Season)">$LOCALIZE[20381]</value> <!-- STRING: Specials -->
		<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Title]</value>
	</variable>
	
	<!-- Simulated Discart -->
	<variable name="OSDringcdVar">
		<value condition="SubString(VideoPlayer.Title,s,Left) | SubString(VideoPlayer.Title,a,Left) | SubString(VideoPlayer.Title,j,Left) | SubString(VideoPlayer.Title,S,Left) | SubString(VideoPlayer.Title,A,Left) | SubString(VideoPlayer.Title,J,Left)">thumbs/ring2.png</value>
		<value condition="SubString(VideoPlayer.Title,m,Left) | SubString(VideoPlayer.Title,c,Left) | SubString(VideoPlayer.Title,l,Left) | SubString(VideoPlayer.Title,M,Left) | SubString(VideoPlayer.Title,C,Left) | SubString(VideoPlayer.Title,L,Left)">thumbs/ring1.png</value>
		<value condition="SubString(VideoPlayer.Title,t,Left) | SubString(VideoPlayer.Title,e,Left) | SubString(VideoPlayer.Title,b,Left) | SubString(VideoPlayer.Title,T,Left) | SubString(VideoPlayer.Title,E,Left) | SubString(VideoPlayer.Title,B,Left)">thumbs/ring3.png</value>
		<value condition="SubString(VideoPlayer.Title,k,Left) | SubString(VideoPlayer.Title,r,Left) | SubString(VideoPlayer.Title,d,Left) | SubString(VideoPlayer.Title,K,Left) | SubString(VideoPlayer.Title,R,Left) | SubString(VideoPlayer.Title,D,Left)">thumbs/ring4.png</value>
		<value condition="SubString(VideoPlayer.Title,n,Left) | SubString(VideoPlayer.Title,p,Left) | SubString(VideoPlayer.Title,u,Left) | SubString(VideoPlayer.Title,N,Left) | SubString(VideoPlayer.Title,P,Left) | SubString(VideoPlayer.Title,U,Left)">thumbs/ring5.png</value>
		<value condition="SubString(VideoPlayer.Title,v,Left) | SubString(VideoPlayer.Title,g,Left) | SubString(VideoPlayer.Title,o,Left) | SubString(VideoPlayer.Title,V,Left) | SubString(VideoPlayer.Title,G,Left) | SubString(VideoPlayer.Title,O,Left)">thumbs/ring6.png</value>
		<value condition="SubString(VideoPlayer.Title,f,Left) | SubString(VideoPlayer.Title,w,Left) | SubString(VideoPlayer.Title,i,Left) | SubString(VideoPlayer.Title,F,Left) | SubString(VideoPlayer.Title,W,Left) | SubString(VideoPlayer.Title,I,Left) | SubString(VideoPlayer.Title,1,Left) | SubString(VideoPlayer.Title,2,Left) | SubString(VideoPlayer.Title,3,Left) | SubString(VideoPlayer.Title,4,Left) | SubString(VideoPlayer.Title,5,Left)">thumbs/ring7.png</value>
		<value condition="SubString(VideoPlayer.Title,h,Left) | SubString(VideoPlayer.Title,z,Left) | SubString(VideoPlayer.Title,q,Left) | SubString(VideoPlayer.Title,x,Left) | SubString(VideoPlayer.Title,y,Left) |SubString(VideoPlayer.Title,H,Left) | SubString(VideoPlayer.Title,Z,Left) | SubString(VideoPlayer.Title,Q,Left) | SubString(VideoPlayer.Title,X,Left) | SubString(VideoPlayer.Title,Y,Left) | SubString(VideoPlayer.Title,6,Left) | SubString(VideoPlayer.Title,7,Left) | SubString(VideoPlayer.Title,8,Left) | SubString(VideoPlayer.Title,9,Left) | SubString(VideoPlayer.Title,0,Left)">thumbs/ring8.png</value>
		<value>thumbs/ring1.png</value>
	</variable>
</includes>
