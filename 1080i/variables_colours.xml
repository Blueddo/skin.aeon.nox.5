<?xml version="1.0" encoding="UTF-8"?>
<includes>
  <!-- Topbar Colour -->
  <variable name="Colour_GeneralTopbarColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.TopBarColour))">$INFO[Skin.String(Colour.TopBarColour)]</value>
    <value>FF000000</value>
  </variable>
  <!-- Floor Colour -->
  <variable name="Colour_FloorColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.ListThemeColour)) + Control.IsVisible(50)">$INFO[Skin.String(Colour.ListThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.InfoWallThemeColour)) + Control.IsVisible(51)">$INFO[Skin.String(Colour.InfoWallThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.LandscapeThemeColour)) + Control.IsVisible(52)">$INFO[Skin.String(Colour.LandscapeThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ShowcaseThemeColour)) + [Control.IsVisible(53) | Control.IsVisible(54)]">$INFO[Skin.String(Colour.ShowcaseThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.TriPanelThemeColour)) + Control.IsVisible(55)">$INFO[Skin.String(Colour.TriPanelThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.PostersThemeColour)) + Control.IsVisible(56)">$INFO[Skin.String(Colour.PostersThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ShiftThemeColour)) + Control.IsVisible(57)">$INFO[Skin.String(Colour.ShiftThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.SmallIconsThemeColour)) + Control.IsVisible(499)">$INFO[Skin.String(Colour.SmallIconsThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.IconsThemeColour)) + [Control.IsVisible(500) | Control.IsVisible(511) | Control.IsVisible(501)]">$INFO[Skin.String(Colour.IconsThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.FanartListThemeColour)) + Control.IsVisible(507)">$INFO[Skin.String(Colour.FanartListThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.Shelf3DThemeColour)) + [Control.IsVisible(708) | Control.IsVisible(728)]">$INFO[Skin.String(Colour.Shelf3DThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.BannerWallThemeColour)) + Control.IsVisible(58)">$INFO[Skin.String(Colour.BannerWallThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.BannerInfoThemeColour)) + Control.IsVisible(505)">$INFO[Skin.String(Colour.BannerInfoThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.BannerPlexThemeColour)) + Control.IsVisible(601)">$INFO[Skin.String(Colour.BannerPlexThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.BigIconsThemeColour)) + Control.IsVisible(590)">$INFO[Skin.String(Colour.BigIconsThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Media: Watched status indicator -->
  <variable name="Colour_WatchedStatusColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>ff6db9e5</value>
  </variable>
  <!-- General: Theme Colour -->
  <variable name="Colour_ThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.OSDThemeColour)) + [Window.IsActive(2006) | Window.IsActive(FullScreenVideo)]">$INFO[Skin.String(Colour.OSDThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>ff6db9e5</value>
  </variable>
  <!-- Views: InfoWall Theme Colour -->
  <variable name="Colour_InfoWallThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.InfoWallThemeColour))">$INFO[Skin.String(Colour.InfoWallThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: InfoWall Highlight Colour -->
  <variable name="Colour_InfoWallHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.InfoWallHighlightColour))">$INFO[Skin.String(Colour.InfoWallHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: InfoWall Watched Status Colour -->
  <variable name="Colour_InfoWallWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.InfoWallWatchedStatusColour))">$INFO[Skin.String(Colour.InfoWallWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Landscape Theme Colour -->
  <variable name="Colour_LandscapeThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.LandscapeThemeColour)) + Control.IsVisible(52)">$INFO[Skin.String(Colour.LandscapeThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Landscape Watched Status Colour -->
  <variable name="Colour_LandscapeWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.LandscapeWatchedStatusColour))">$INFO[Skin.String(Colour.LandscapeWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Showcase Theme Colour -->
  <variable name="Colour_ShowcaseThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.ShowcaseThemeColour)) + [Control.IsVisible(53) | Control.IsVisible(54)]">$INFO[Skin.String(Colour.ShowcaseThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.BannerPlexThemeColour)) + Control.IsVisible(601)">$INFO[Skin.String(Colour.BannerPlexThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Showcase Watched Status Colour -->
  <variable name="Colour_ShowcaseWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ShowcaseWatchedStatusColour))">$INFO[Skin.String(Colour.ShowcaseWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: TriPanel Theme Colour -->
  <variable name="Colour_TriPanelThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.TriPanelThemeColour))">$INFO[Skin.String(Colour.TriPanelThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: TriPanel Highlight Colour -->
  <variable name="Colour_TriPanelHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.TriPanelHighlightColour))">$INFO[Skin.String(Colour.TriPanelHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: TriPanel Watched Status Colour -->
  <variable name="Colour_TriPanelWatchedStatusColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.TriPanelWatchedStatusColour))">$INFO[Skin.String(Colour.TriPanelWatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Posters Theme Colour -->
  <variable name="Colour_PostersThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.PostersThemeColour))">$INFO[Skin.String(Colour.PostersThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Posters Watched Status Colour -->
  <variable name="Colour_PostersWatchedStatusColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.PostersWatchedStatusColour))">$INFO[Skin.String(Colour.PostersWatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Shift Theme Colour -->
  <variable name="Colour_ShiftThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.ShiftThemeColour))">$INFO[Skin.String(Colour.ShiftThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Shift Watched Status Colour -->
  <variable name="Colour_ShiftWatchedStatusColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.ShiftWatchedStatusColour))">$INFO[Skin.String(Colour.ShiftWatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BannerWall Theme Colour -->
  <variable name="Colour_BannerWallThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BannerWallThemeColour))">$INFO[Skin.String(Colour.BannerWallThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BannerWall Highlight Colour -->
  <variable name="Colour_BannerWallHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BannerWallHighlightColour))">$INFO[Skin.String(Colour.BannerWallHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BannerWall Watched Status Colour -->
  <variable name="Colour_BannerWallWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.BannerWallWatchedStatusColour))">$INFO[Skin.String(Colour.BannerWallWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Small Icons Theme Colour -->
  <variable name="Colour_SmallIconsThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.SmallIconsThemeColour))">$INFO[Skin.String(Colour.SmallIconsThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Small Icons Highlight Colour -->
  <variable name="Colour_SmallIconsHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.SmallIconsHighlightColour))">$INFO[Skin.String(Colour.SmallIconsHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Small Icons Watched Status Colour -->
  <variable name="Colour_SmallIconsWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.SmallIconsWatchedStatusColour))">$INFO[Skin.String(Colour.SmallIconsWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Icons Theme Colour -->
  <variable name="Colour_IconsThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.IconsThemeColour))">$INFO[Skin.String(Colour.IconsThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Icons Highlight Colour -->
  <variable name="Colour_IconsHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.IconsHighlightColour))">$INFO[Skin.String(Colour.IconsHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Icons Watched Status Colour -->
  <variable name="Colour_IconsWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.IconsWatchedStatusColour))">$INFO[Skin.String(Colour.IconsWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Big Icons Theme Colour -->
  <variable name="Colour_BigIconsThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BigIconsThemeColour))">$INFO[Skin.String(Colour.BigIconsThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Big Icons Highlight Colour -->
  <variable name="Colour_BigIconsHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BigIconsHighlightColour))">$INFO[Skin.String(Colour.BigIconsHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: LowList Theme Colour -->
  <variable name="Colour_LowListThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.LowListThemeColour))">$INFO[Skin.String(Colour.LowListThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: LowList Highlight Colour -->
  <variable name="Colour_LowListHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.LowListHighlightColour))">$INFO[Skin.String(Colour.LowListHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: LowList Watched Status Colour -->
  <variable name="Colour_LowListWatchedStatusColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.LowListWatchedStatusColour))">$INFO[Skin.String(Colour.LowListWatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Episode Theme Colour -->
  <variable name="Colour_EpisodeThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.EpisodeThemeColour))">$INFO[Skin.String(Colour.EpisodeThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Episode Watched Status Colour -->
  <variable name="Colour_EpisodeWatchedStatusColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.EpisodeWatchedStatusColour))">$INFO[Skin.String(Colour.EpisodeLowListWatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Wall Highlight Colour -->
  <variable name="Colour_WallHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.WallHighlightColour))">$INFO[Skin.String(Colour.WallHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Wall Watched Status Colour -->
  <variable name="Colour_WallWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WallWatchedStatusColour))">$INFO[Skin.String(Colour.WallWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Gallery Theme Colour -->
  <variable name="Colour_GalleryThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.GalleryThemeColour))">$INFO[Skin.String(Colour.GalleryThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Gallery Highlight Colour -->
  <variable name="Colour_GalleryHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.GalleryHighlightColour))">$INFO[Skin.String(Colour.GalleryHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Gallery Watched Status Colour -->
  <variable name="Colour_GalleryWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.GalleryWatchedStatusColour))">$INFO[Skin.String(Colour.GalleryWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BannerInfo Theme Colour -->
  <variable name="Colour_BannerInfoThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BannerInfoThemeColour))">$INFO[Skin.String(Colour.BannerInfoThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BannerInfo Highlight Colour -->
  <variable name="Colour_BannerInfoHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BannerInfoHighlightColour))">$INFO[Skin.String(Colour.BannerInfoHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BannerInfo Watched Status Colour -->
  <variable name="Colour_BannerInfoWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.BannerInfoWatchedStatusColour))">$INFO[Skin.String(Colour.BannerInfoWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Panel Theme Colour -->
  <variable name="Colour_PanelThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.PanelThemeColour))">$INFO[Skin.String(Colour.PanelThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Panel Highlight Colour -->
  <variable name="Colour_PanelHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.PanelHighlightColour))">$INFO[Skin.String(Colour.PanelHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Panel Watched Status Colour -->
  <variable name="Colour_PanelWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.PanelWatchedStatusColour))">$INFO[Skin.String(Colour.PanelWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: FanartList Theme Colour -->
  <variable name="Colour_FanartListThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.FanartListThemeColour))">$INFO[Skin.String(Colour.FanartListThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: FanartList Highlight Colour -->
  <variable name="Colour_FanartListHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.FanartListHighlightColour))">$INFO[Skin.String(Colour.FanartListHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: FanartList Watched Status Colour -->
  <variable name="Colour_FanartListWatchedStatusColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.FanartListWatchedStatusColour))">$INFO[Skin.String(Colour.FanartListWatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: SongList Theme Colour -->
  <variable name="Colour_SongListThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.SongListThemeColour))">$INFO[Skin.String(Colour.SongListThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: SongList Highlight Colour -->
  <variable name="Colour_SongListHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.SongListHighlightColour))">$INFO[Skin.String(Colour.SongListHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BigList Theme Colour -->
  <variable name="Colour_BigListThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BigListThemeColour))">$INFO[Skin.String(Colour.BigListThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BigList Highlight Colour -->
  <variable name="Colour_BigListHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BigListHighlightColour))">$INFO[Skin.String(Colour.BigListHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BigList Watched Status Colour -->
  <variable name="Colour_BigListWatchedStatusColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BigListWatchedStatusColour))">$INFO[Skin.String(Colour.BigListWatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BigFan Theme Colour -->
  <variable name="Colour_BigFanThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BigFanThemeColour))">$INFO[Skin.String(Colour.BigFanThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BigFan Watched Status Colour -->
  <variable name="Colour_BigFanWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.BigFanWatchedStatusColour))">$INFO[Skin.String(Colour.BigFanWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BigInfo Theme Colour -->
  <variable name="Colour_BigInfoThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BigInfoThemeColour))">$INFO[Skin.String(Colour.BigInfoThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BannerPlex Theme Colour -->
  <variable name="Colour_BannerPlexThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BannerPlexThemeColour))">$INFO[Skin.String(Colour.BannerPlexThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BannerPlex Highlight Colour -->
  <variable name="Colour_BannerPlexHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.BannerPlexHighlightColour))">$INFO[Skin.String(Colour.BannerPlexHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: BannerPlex Watched Status Colour -->
  <variable name="Colour_BannerPlexWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.BannerPlexWatchedStatusColour))">$INFO[Skin.String(Colour.BannerPlexWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Fullscreen Wall Highlight Colour -->
  <variable name="Colour_FullscreenWallHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.FullscreenWallHighlightColour))">$INFO[Skin.String(Colour.FullscreenWallHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Fullscreen Wall Watched Status Colour -->
  <variable name="Colour_FullscreenWallWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.FullscreenWallWatchedStatusColour))">$INFO[Skin.String(Colour.FullscreenWallWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: RightList Theme Colour -->
  <variable name="Colour_RightListThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.RightListThemeColour))">$INFO[Skin.String(Colour.RightListThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: RightList Highlight Colour -->
  <variable name="Colour_RightListHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.RightListHighlightColour))">$INFO[Skin.String(Colour.RightListHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: RightList Watched Status Colour -->
  <variable name="Colour_RightListWatchedStatusColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.RightListWatchedStatusColour))">$INFO[Skin.String(Colour.RightListWatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Shelf 3D Theme Colour -->
  <variable name="Colour_Shelf3DThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.Shelf3DThemeColour))">$INFO[Skin.String(Colour.Shelf3DThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Views: Shelf 3D Watched Status Colour -->
  <variable name="Colour_Shelf3DWatchedStatusColourVar">
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.Shelf3DWatchedStatusColour))">$INFO[Skin.String(Colour.Shelf3DWatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
    <value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Media: TV highlight -->
  <variable name="Colour_TVHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.TVHighlightColour))">$INFO[Skin.String(Colour.TVHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Media: General highlight -->
  <variable name="Colour_GeneralHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Media: Home Movies highlight -->
  <variable name="Colour_HomeMoviesHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.HomeMoviesHighlightColour))">$INFO[Skin.String(Colour.HomeMoviesHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Media: Clips highlight -->
  <variable name="Colour_ClipsHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.ClipsHighlightColour))">$INFO[Skin.String(Colour.ClipsHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Media: Music highlight -->
  <variable name="Colour_MusicHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.MusicHighlightColour))">$INFO[Skin.String(Colour.MusicHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Media: Channels highlight -->
  <variable name="Colour_ChannelHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.ChannelHighlightColour))">$INFO[Skin.String(Colour.ChannelHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- Media: Photos highlight -->
  <variable name="Colour_PhotoHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.PhotoHighlightColour))">$INFO[Skin.String(Colour.PhotoHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
  <!-- OSD: Progress Bar Colour -->
  <variable name="Colour_OSDProgressBarColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.OSDProgressBarColour))">$INFO[Skin.String(Colour.OSDProgressBarColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.OSDThemeColour))">$INFO[Skin.String(Colour.OSDThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>ff6db9e5</value>
  </variable>
  <!-- OSD: Theme Colour -->
  <variable name="Colour_OSDThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.OSDThemeColour))">$INFO[Skin.String(Colour.OSDThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>ff6db9e5</value>
  </variable>
  <!-- Home Window Theme Colour -->
  <variable name="Colour_HomeWindowThemeColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.HomeThemeColour))">$INFO[Skin.String(Colour.HomeThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>ff6db9e5</value>
  </variable>
  <!-- Home Window Theme Colour -->
  <variable name="Color_HomeSubmenuButtonVar">
    <value condition="!IsEmpty(Skin.String(Colour.HomeThemeColour)) + Control.HasFocus(4999)">$INFO[Skin.String(Colour.HomeThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour)) + Control.HasFocus(4999)">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Control.HasFocus(4999)">ff6db9e5</value>
    <value>white</value>
  </variable>
  <!-- Focussed Main Menu Item Colour -->
  <variable name="Colour_MainMenuFocussedColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.MainMenuFocussedColour))">$INFO[Skin.String(Colour.MainMenuFocussedColour)]</value>
    <value condition="Skin.HasTheme(WhiteFlat)">FF505050</value>
    <value>FFe5e5e5</value>
  </variable>
  <!-- Unfocussed Main Menu Item Colour -->
  <variable name="Colour_MainMenuUnfocussedColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.MainMenuUnfocussedColour))">$INFO[Skin.String(Colour.MainMenuUnfocussedColour)]</value>
    <value condition="Skin.HasTheme(WhiteFlat)">40505050</value>
    <value>FF606060</value>
  </variable>
  <!-- Submenu Highlight Colour -->
  <variable name="Colour_SubmenuHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.SubmenuHighlightColour))">$INFO[Skin.String(Colour.SubmenuHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value condition="Skin.HasTheme(WhiteFlat)">FF6db9e5</value>
    <value>ff6db9e5</value>
  </variable>
  <!-- Submenu Text Colour -->
  <variable name="Colour_SubmenuTextColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.SubmenuTextColour))">$INFO[Skin.String(Colour.SubmenuTextColour)]</value>
    <value>AAFFFFFF</value>
  </variable>
  <!-- Widgets: Media highlight -->
  <variable name="Colour_WidgetHighlightColourVar">
    <value condition="!IsEmpty(Skin.String(Colour.WidgetHighlightColour))">$INFO[Skin.String(Colour.WidgetHighlightColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.HomeThemeColour))">$INFO[Skin.String(Colour.HomeThemeColour)]</value>
    <value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
    <value>FF6db9e5</value>
  </variable>
</includes>
