<?xml version="1.0" encoding="utf-8"?>
<includes>
  <constant name="fade_time">1600</constant>
  <include name="View_701_MyFlix">
    <control type="group">
      <visible>Control.IsVisible(701)</visible>
      <include>ViewAnimation</include>
      <control type="group">
        <animation effect="slide" start="0" end="0,70" time="0" tween="cubic" easing="inout" condition="Container.Content(episodes)">Conditional</animation>
        <control type="label">
          <posx>25</posx>
          <posy>-850</posy>
          <font>font_musicviz</font>
          <textcolor>grey</textcolor>
          <label>$INFO[ListItem.Title]</label>
        </control>
        <control type="label">
          <posx>25</posx>
          <posy>-850</posy>
          <font>font_musicviz</font>
          <textcolor>grey</textcolor>
          <label>$INFO[ListItem.TVShowTitle]</label>
          <visible>Container.Content(episodes)</visible>
        </control>
        <control type="group">
          <posx>10</posx>
          <posy>220</posy>
          <width>1000</width>
          <height>270</height>
          <include>VisibleFadeEffect</include>
          <textcolor>grey</textcolor>
          <visible/>
          <control type="group">
            <animation effect="slide" start="0" end="0,-50" time="620" tween="cubic" easing="inout" condition="IsEmpty(ListItem.Top250)">Conditional</animation>
            <control type="grouplist">
              <visible>Container.Content(movies)</visible>
              <control type="label">
                <label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[20339]:[/COLOR][CR]$INFO[ListItem.Director]</label>
                <width>800</width>
                <textcolor>grey</textcolor>
                <include>RighListButtonsValues</include>
                <visible>!IsEmpty(ListItem.Director)</visible>
              </control>
              <control type="label">
                <label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[515]:[/COLOR][CR]$INFO[ListItem.Genre]</label>
                <width>800</width>
                <include>RighListButtonsValues</include>
              </control>
              <control type="label">
                <label>$VAR[FloorSubLabelVar]</label>
                <width>1000</width>
                <height>45</height>
                <textcolor>grey</textcolor>
                <include>RighListButtonsValues</include>
              </control>
            </control>
            <control type="grouplist">
              <visible>[Container.Content(tvshows) | Container.Content(seasons)]</visible>
              <control type="label">
                <label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[126]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.Status)]</label>
                <width>800</width>
                <include>RighListButtonsValues</include>
                <visible>[Container.Content(tvshows) | Container.Content(seasons)] + !IsEmpty(Window(Home).Property(NextAired.Status))</visible>
              </control>
              <control type="label">
                <label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[31010]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.NextDate),,: ]$INFO[Window(Home).Property(NextAired.NextTitle)]</label>
                <width>800</width>
                <include>RighListButtonsValues</include>
                <visible>!IsEmpty(Window(Home).Property(NextAired.NextDate)) + !Skin.HasSetting(Disable.NextAired)</visible>
              </control>
              <control type="label"><label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[31011]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.LatestNumber),, - ]$INFO[Window(Home).Property(NextAired.LatestTitle)]</label>&gt;
								<width>800</width><include>RighListButtonsValues</include><visible>Container.Content(tvshows) + !IsEmpty(Window(Home).Property(NextAired.LatestDate)) + IsEmpty(Window(Home).Property(NextAired.NextDate))</visible></control>
              <control type="label">
                <label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[515]:[/COLOR][CR]$INFO[ListItem.Genre]</label>
                <width>800</width>
                <include>RighListButtonsValues</include>
                <visible>!IsEmpty(ListItem.Genre)</visible>
              </control>
            </control>
            <control type="grouplist">
              <visible>Container.Content(episodes)</visible>
              <control type="label">
                <label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[20359]:[/COLOR][CR]$VAR[FloorLabelVar]</label>
                <width>800</width>
                <include>RighListButtonsValues</include>
              </control>
              <control type="label">
                <label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[126]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.Status)]</label>
                <include>RighListButtonsValues</include>
                <visible>!IsEmpty(Window(Home).Property(NextAired.Status))</visible>
              </control>
              <control type="label">
                <label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[31010]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.NextDate),,: ]$INFO[Window(Home).Property(NextAired.NextTitle)]</label>
                <width>800</width>
                <include>RighListButtonsValues</include>
                <visible>!IsEmpty(Window(Home).Property(NextAired.NextDate)) + !Skin.HasSetting(Disable.NextAired)</visible>
              </control>
              <control type="label"><label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[31011]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.LatestNumber),, - ]$INFO[Window(Home).Property(NextAired.LatestTitle)]</label>&gt;
								<width>800</width><include>RighListButtonsValues</include><visible>!IsEmpty(Window(Home).Property(NextAired.LatestDate)) + IsEmpty(Window(Home).Property(NextAired.NextDate))</visible></control>
              <control type="label">
                <label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[20416]:[/COLOR][CR]$INFO[ListItem.Premiered]</label>
                <width>650</width>
                <include>RighListButtonsValues</include>
                <visible>!IsEmpty(ListItem.Premiered)</visible>
              </control>
              <control type="label">
                <label>[COLOR $VAR[Colour_ThemeColourVar]]$LOCALIZE[2050]:[/COLOR][CR]$INFO[ListItem.Duration,, $LOCALIZE[12391]]</label>
                <width>650</width>
                <include>RighListButtonsValues</include>
                <visible>!IsEmpty(ListItem.Duration)</visible>
              </control>
            </control>
            <control type="textbox">
              <posy>240</posy>
              <posx>15</posx>
              <label>$INFO[ListItem.Plot]</label>
              <width>800</width>
              <height>130</height>
              <font>font15</font>
              <textcolor>grey</textcolor>
              <autoscroll delay="3000" time="3000" repeat="4000">true</autoscroll>
              <animation effect="slide" start="0" end="0,40" time="620" tween="cubic" easing="inout" condition="!IsEmpty(Window(Home).Property(NextAired.Status))">Conditional</animation>
              <visible>[Container.Content(movies) + !ListItem.IsCollection] | [Container.Content(tvshows) + !Skin.HasSetting(Enable.MyFlix.TVLandscape)]</visible>
            </control>
            <control type="textbox">
              <posy>240</posy>
              <posx>15</posx>
              <label>$INFO[ListItem.Plot]</label>
              <width>800</width>
              <height>215</height>
              <font>font15</font>
              <textcolor>grey</textcolor>
              <autoscroll delay="3000" time="3000" repeat="4000">true</autoscroll>
              <animation effect="slide" start="0" end="0,40" time="620" tween="cubic" easing="inout" condition="true">Conditional</animation>
              <visible>Container.Content(episodes) | [Container.Content(tvshows) + Skin.HasSetting(Enable.MyFlix.TVLandscape)]</visible>
            </control>
            <control type="textbox">
              <posy>190</posy>
              <posx>15</posx>
              <label>$INFO[ListItem.Plot]</label>
              <width>800</width>
              <height>205</height>
              <font>font15</font>
              <textcolor>grey</textcolor>
              <autoscroll delay="3000" time="2500" repeat="4000">true</autoscroll>
              <visible>ListItem.IsCollection</visible>
            </control>
          </control>
        </control>
      </control>
      <control type="fixedlist" id="701">
        <posy>530</posy>
        <posx>0</posx>
        <width>1920</width>
        <height>600</height>
        <visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes)</visible>
        <onleft>701</onleft>
        <onright>701</onright>
        <onup>SetProperty(MediaMenu,True,home)</onup>
        <onup>SetFocus(9050,0)</onup>
        <ondown>63</ondown>
        <viewtype label="MyFlix">bigwrap</viewtype>
        <pagecontrol>63</pagecontrol>
        <orientation>horizontal</orientation>
        <preloaditems>2</preloaditems>
        <focusposition>0</focusposition>
        <itemlayout height="525" width="271" condition="Container.Content(movies) | Container.Content(tvshows)">
          <include>FlixPoster</include>
          <include>FlixPosterOverlay</include>
          <control type="image">
            <posx>10</posx>
            <posy>75</posy>
            <width>268</width>
            <height>390</height>
            <aspectratio>stretch</aspectratio>
            <colordiffuse>99FFFFFF</colordiffuse>
            <texture border="1">black.png</texture>
            <bordersize>20</bordersize>
          </control>
          <control type="image">
            <include>FlixCaseVars</include>
            <colordiffuse>99FFFFFF</colordiffuse>
            <aspectratio>stretch</aspectratio>
            <texture>$INFO[ListItem.Art(bigThumb)]</texture>
          </control>
          <include>FlixPosterReflection</include>
          <include>FlixPosterCaseReflection</include>
        </itemlayout>
        <focusedlayout height="525" width="271" condition="Container.Content(movies) | Container.Content(sets) | [Container.Content(tvshows) + !Skin.HasSetting(Enable.MyFlix.TVLandscape)]">
          <control type="group">
            <visible>[[Container.Content(movies) | Container.Content(sets)] + Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.OpenCase)] | [[Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(Enable.MyFlix.OpenCase)] | Container.Content(tvshows)</visible>
            <include>FlixPoster</include>
            <control type="image">
              <include>FlixCaseVars</include>
              <texture>$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
            </control>
            <include>FlixPosterOverlay</include>
            <include>FlixPosterReflection</include>
            <include>FlixPosterCaseReflection</include>
          </control>
        </focusedlayout>
        <itemlayout height="270" width="480" condition="Container.Content(tvshows) + Skin.HasSetting(Enable.MyFlix.TVLandscape)">
          <include>FlixLandscape</include>
          <control type="image">
            <posx>398</posx>
            <posy>217</posy>
            <width>60</width>
            <height>60</height>
            <texture>$VAR[OverlayVar]</texture>
            <aspectratio align="center" aligny="top">keep</aspectratio>
          </control>
          <control type="image">
            <posx>-10</posx>
            <posy>197</posy>
            <width>480</width>
            <height>270</height>
            <texture border="1" colordiffuse="99FFFFFF">black.png</texture>
            <bordersize>20</bordersize>
          </control>
          <include>FlixLandscapeReflection</include>
        </itemlayout>
        <focusedlayout height="270" width="480" condition="Container.Content(tvshows) + Skin.HasSetting(Enable.MyFlix.TVLandscape)">
          <include>FlixLandscape</include>
          <control type="image">
            <posx>398</posx>
            <posy>217</posy>
            <width>60</width>
            <height>60</height>
            <texture>$VAR[OverlayVar]</texture>
            <aspectratio align="center" aligny="top">keep</aspectratio>
          </control>
          <include>FlixLandscapeReflection</include>
        </focusedlayout>
        <itemlayout height="270" width="480" condition="Container.Content(episodes)">
          <include>FlixEpisodeThumb</include>
          <control type="image">
            <posx>398</posx>
            <posy>217</posy>
            <width>60</width>
            <height>60</height>
            <texture>$VAR[OverlayVar]</texture>
            <aspectratio align="center" aligny="top">keep</aspectratio>
            <visible>!IsEmpty(Skin.String(701.Episodes.DisableOverlay)) + Container.Content(episodes)</visible>
          </control>
          <control type="image">
            <posx>0</posx>
            <posy>197</posy>
            <width>480</width>
            <height>270</height>
            <texture border="1" colordiffuse="99FFFFFF">black.png</texture>
            <bordersize>20</bordersize>
          </control>
          <include>FlixEpisodeThumbReflection</include>
        </itemlayout>
        <focusedlayout height="270" width="480" condition="Container.Content(episodes)">
          <include>FlixEpisodeThumb</include>
          <control type="image">
            <posx>398</posx>
            <posy>217</posy>
            <width>60</width>
            <height>60</height>
            <texture>$VAR[OverlayVar]</texture>
            <aspectratio align="center" aligny="top">keep</aspectratio>
            <visible>!IsEmpty(Skin.String(701.Episodes.DisableOverlay)) + Container.Content(episodes)</visible>
          </control>
          <include>FlixEpisodeThumbReflection</include>
        </focusedlayout>
      </control>
      <control type="group">
        <posy>530</posy>
        <posx>0</posx>
        <visible>[[Container.Content(movies) | Container.Content(sets)] + !Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.OpenCase)]</visible>
        <control type="image">
          <include>FlixCaseVars</include>
          <texture>$VAR[CaseTypePathVar]$VAR[GlobalCaseBackVar]</texture>
        </control>
      </control>
      <control type="group">
        <posx>33</posx>
        <posy>680</posy>
        <width>215</width>
        <height>215</height>
        <visible>[[Container.Content(movies) | Container.Content(sets)] + !Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.OpenCase)]</visible>
        <control type="image">
          <texture fallback="bd.png">$INFO[ListItem(0).Art(discart)]</texture>
          <animation type="Conditional" condition="[!IsEmpty(Control.GetLabel(4447)) + Control.IsVisible(4447)]" reversible="false">
            <effect type="slide" start="1900,0" end="0,0" delay="0" time="3000" tween="cubic" easing="inout"/>
            <effect type="rotate" start="0" center="auto" end="1080" delay="0" time="3000" tween="cubic" easing="inout"/>
          </animation>
          <visible>!ListItem.IsCollection</visible>
        </control>
        <control type="image">
          <aspectratio>keep</aspectratio>
          <texture>$INFO[Window(home).Property(Set.Movie.1.Art(discart))]</texture>
          <animation type="Conditional" condition="[!IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
            <effect type="slide" start="1900,0" end="0,0" delay="0" time="3000" tween="cubic" easing="inout"/>
            <effect type="rotate" start="0" center="auto" end="1080" delay="0" time="3000" tween="cubic" easing="inout"/>
          </animation>
          <visible>!IsEmpty(Window(home).Property(Set.Movie.1.Art(discart)))</visible>
        </control>
        <control type="image">
          <aspectratio>keep</aspectratio>
          <texture>$INFO[Window(home).Property(Set.Movie.2.Art(discart))]</texture>
          <animation type="Conditional" condition="[!IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
            <effect type="slide" start="1900,0" end="0,0" delay="500" time="3000" tween="cubic" easing="inout"/>
            <effect type="rotate" start="0" center="auto" end="1080" delay="500" time="3000" tween="cubic" easing="inout"/>
          </animation>
          <visible>!IsEmpty(Window(home).Property(Set.Movie.2.Art(discart)))</visible>
        </control>
        <control type="image">
          <aspectratio>keep</aspectratio>
          <texture>$INFO[Window(home).Property(Set.Movie.3.Art(discart))]</texture>
          <animation type="Conditional" condition="[!IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
            <effect type="slide" start="1900,0" end="0,0" delay="1000" time="3000" tween="cubic" easing="inout"/>
            <effect type="rotate" start="0" center="auto" end="1080" delay="1000" time="3000" tween="cubic" easing="inout"/>
          </animation>
          <visible>!IsEmpty(Window(home).Property(Set.Movie.3.Art(discart)))</visible>
        </control>
        <control type="image">
          <aspectratio>keep</aspectratio>
          <texture>$INFO[Window(home).Property(Set.Movie.4.Art(discart))]</texture>
          <animation type="Conditional" condition="[!IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
            <effect type="slide" start="1900,0" end="0,0" delay="1500" time="3000" tween="cubic" easing="inout"/>
            <effect type="rotate" start="0" center="auto" end="1080" delay="1500" time="3000" tween="cubic" easing="inout"/>
          </animation>
          <visible>!IsEmpty(Window(home).Property(Set.Movie.4.Art(discart)))</visible>
        </control>
        <control type="image">
          <aspectratio>keep</aspectratio>
          <texture>$INFO[Window(home).Property(Set.Movie.5.Art(discart))]</texture>
          <animation type="Conditional" condition="[!IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
            <effect type="slide" start="1900,0" end="0,0" delay="2000" time="3000" tween="cubic" easing="inout"/>
            <effect type="rotate" start="0" center="auto" end="1080" delay="2000" time="3000" tween="cubic" easing="inout"/>
          </animation>
          <visible>!IsEmpty(Window(home).Property(Set.Movie.5.Art(discart)))</visible>
        </control>
        <control type="image">
          <aspectratio>keep</aspectratio>
          <texture>$INFO[Window(home).Property(Set.Movie.6.Art(discart))]</texture>
          <animation type="Conditional" condition="[!IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
            <effect type="slide" start="1900,0" end="0,0" delay="2500" time="3000" tween="cubic" easing="inout"/>
            <effect type="rotate" start="0" center="auto" end="1080" delay="2500" time="3000" tween="cubic" easing="inout"/>
          </animation>
          <visible>!IsEmpty(Window(home).Property(Set.Movie.6.Art(discart)))</visible>
        </control>
        <control type="image">
          <aspectratio>keep</aspectratio>
          <texture>$INFO[Window(home).Property(Set.Movie.7.Art(discart))]</texture>
          <animation type="Conditional" condition="[!IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
            <effect type="slide" start="1900,0" end="0,0" delay="3000" time="3000" tween="cubic" easing="inout"/>
            <effect type="rotate" start="0" center="auto" end="1080" delay="3000" time="3000" tween="cubic" easing="inout"/>
          </animation>
          <visible>!IsEmpty(Window(home).Property(Set.Movie.7.Art(discart)))</visible>
        </control>
        <control type="image">
          <aspectratio>keep</aspectratio>
          <texture>$INFO[Window(home).Property(Set.Movie.8.Art(discart))]</texture>
          <animation type="Conditional" condition="[!IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
            <effect type="slide" start="1900,0" end="0,0" delay="3500" time="3000" tween="cubic" easing="inout"/>
            <effect type="rotate" start="0" center="auto" end="1080" delay="3500" time="3000" tween="cubic" easing="inout"/>
          </animation>
          <visible>!IsEmpty(Window(home).Property(Set.Movie.8.Art(discart)))</visible>
        </control>
      </control>
      <control type="group" id="7000">
        <visible>[Container.Content(movies) | Container.Content(sets)] + [Container.OnNext | Container.OnPrevious] + Skin.HasSetting(Enable.MyFlix.OpenCase)</visible>
        <animation effect="fade" time="fade_time" end="0" reversible="false">Hidden</animation>
        <control type="label">
          <include>HiddenObject</include>
        </control>
      </control>
      <control type="group">
        <posy>530</posy>
        <posx>0</posx>
        <visible>[[Container.Content(movies) | Container.Content(sets)] + !Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.OpenCase)]</visible>
        <include>MyFlixModAnimation</include>
        <include>FlixPoster</include>
        <control type="image">
          <include>FlixCaseVars</include>
          <texture>$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
        </control>
        <include>FlixPosterOverlay</include>
        <include>FlixPosterReflection</include>
        <include>FlixPosterCaseReflection</include>
      </control>
      <control type="scrollbar" id="63">
        <posx>110</posx>
        <posy>985</posy>
        <width>1680</width>
        <height>12</height>
        <onup>53</onup>
        <ondown>ActivateWindow(1113)</ondown>
        <texturesliderbackground border="1">-</texturesliderbackground>
        <texturesliderbar border="6,0,6,0">scrollbar/texturesliderbar_hor.png</texturesliderbar>
        <texturesliderbarfocus border="6,0,6,0">scrollbar/texturesliderbarfocus_hor.png</texturesliderbarfocus>
        <textureslidernib>-</textureslidernib>
        <textureslidernibfocus>-</textureslidernibfocus>
        <showonepage>false</showonepage>
        <orientation>horizontal</orientation>
        <animation effect="fade" start="100" end="0" time="500" delay="500" condition="!Control.HasFocus(63) + !Container.Scrolling">Conditional</animation>
      </control>
    </control>
  </include>
  <include name="FlixPoster">
    <control type="image">
      <posx>10</posx>
      <posy>75</posy>
      <width>268</width>
      <height>390</height>
      <texture>$VAR[PosterThumb]</texture>
      <bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
      <bordersize>20</bordersize>
    </control>
  </include>
  <include name="FlixPosterOverlay">
    <!--<control type="image">
			<posx>206</posx>
			<posy>95</posy>
			<width>60</width>
			<height>60</height>
			<texture>$VAR[OverlayVar]</texture>
			<aspectratio align="center" aligny="top">keep</aspectratio>
			<visible>[!IsEmpty(Skin.String(701.Movies.DisableOverlay)) + Container.Content(movies)] | [!IsEmpty(Skin.String(701.TV.DisableOverlay)) + Container.Content(tvshows)]</visible>
		</control>-->
  </include>
  <include name="FlixPosterReflection">
    <control type="image">
      <posx>29</posx>
      <posy>465</posy>
      <width>228</width>
      <height>402</height>
      <texture flipy="true" diffuse="thumbs/thumb_reflect.png">$VAR[PosterThumbVar]</texture>
    </control>
  </include>
  <include name="FlixLandscape">
    <control type="image">
      <posx>-10</posx>
      <posy>197</posy>
      <width>480</width>
      <height>270</height>
      <texture diffuse="thumbs/thumb_mask.png">$VAR[LandscapeItem0Var]</texture>
      <bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
      <bordersize>20</bordersize>
    </control>
  </include>
  <include name="FlixLandscapeReflection">
    <control type="image">
      <posx>10</posx>
      <posy>465</posy>
      <width>440</width>
      <height>270</height>
      <texture flipy="true" diffuse="thumbs/thumb_diffuse.png">$VAR[LandscapeItem0Var]</texture>
    </control>
  </include>
  <include name="FlixEpisodeThumb">
    <control type="image">
      <posx>0</posx>
      <posy>197</posy>
      <width>480</width>
      <height>270</height>
      <texture diffuse="thumbs/thumb_mask.png">$INFO[ListItem.Art(thumb)]</texture>
      <bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
      <bordersize>20</bordersize>
    </control>
  </include>
  <include name="FlixEpisodeThumbReflection">
    <control type="image">
      <posx>0</posx>
      <posy>197</posy>
      <width>480</width>
      <height>270</height>
      <texture flipy="true" diffuse="thumbs/thumb_diffuse.png">$INFO[ListItem.Art(thumb)]</texture>
      <bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
      <bordersize>20</bordersize>
    </control>
  </include>
  <include name="FlixCaseVars">
    <posx>-18</posx>
    <posy>60</posy>
    <width>295</width>
    <height>410</height>
    <visible>Skin.HasSetting(Enable.MyFlix.Cases) + [Container.Content(movies) | Container.Content(sets)]</visible>
  </include>
  <include name="FlixPosterCaseReflection">
    <control type="image">
      <posx>-18</posx>
      <posy>442</posy>
      <width>295</width>
      <height>410</height>
      <colordiffuse>d1FFFFFF</colordiffuse>
      <texture flipy="true" diffuse="thumbs/thumb_diffuse.png">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
      <visible>Skin.HasSetting(Enable.MyFlix.Cases) + [Container.Content(movies) | Container.Content(sets)]</visible>
    </control>
  </include>
</includes>
